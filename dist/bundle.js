(()=>{"use strict";var n={556:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),a=t(645),A=t.n(a)()(r());A.push([n.id,":root {\n    --color-main: #f0f9ff;\n    --red: #ef4444;\n    --yellow: #eab308;\n    --green: #22c55e;\n}\n\n#main {\n    box-sizing: border-box;\n    min-height: 100vh;\n    margin-left: var(--width-side-bar);\n    padding: 50px 100px;\n\n    background-color: var(--color-main);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.title {\n    font-size: 18px;\n}\n\n#main-content {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.project {\n    background-color: var(--color-side-bar);\n    border-radius: 10px;\n    padding: 20px 40px;\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.project-title {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.divider {\n    width: 100%;\n    border-bottom: 1px solid grey;\n}\n\n.project-task {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n/* TASK */\n.task {\n    background-color: var(--color-main);\n    border-radius: 5px;\n    padding: 10px 20px;\n\n    border-top: 1px solid var(--color-main);\n    border-right: 1px solid var(--color-main);\n    border-bottom: 1px solid var(--color-main);\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 1rem;\n}\n\n.task:hover {\n    border-top: 1px solid var(--color-brand);\n    border-right: 1px solid var(--color-brand);\n    border-bottom: 1px solid var(--color-brand);\n}\n\n.high {\n    border-left: 5px solid var(--red);\n}\n\n.medium {\n    border-left: 5px solid var(--yellow);\n}\n\n.low {\n    border-left: 5px solid var(--green);\n}\n\n/* TASK INFO */\n.task-info {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\ninput.status {\n    transform: scale(1.2);\n}\n\n/* TASK END */\n.task-end {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.days-left,\n.due-date {\n    width: 14ch;\n}\n\n.from {\n    width: 20ch;\n}\n\n.overdue {\n    color: var(--red);\n}\n\n.hidden {\n    visibility: hidden;\n}\n\n.cross {\n    text-decoration: line-through;\n}\n\n.done {\n    color: var(--green);\n    font-style: italic;\n}\n\n.delete-task,\n.delete-project {\n    height: fit-content;\n    border: none;\n    background-color: transparent;\n}\n\n.delete-task > img,\n.delete-project > img {\n    height: 24px;\n    display: flex;\n}\n\n/* ADD TASK */\n.add-task-wrapper,\n.add-project-wrapper {\n    height: var(--height-add-task);\n}\n\n.add-task,\n#add-project {\n    height: 1.5rem;\n    background-color: transparent;\n    color: var(--color-brand);\n    border: none;\n    padding: 5px 10px;\n    font-size: 1rem;\n    font-style: italic;\n}\n\n.add-task:hover,\n#add-project:hover {\n    cursor: pointer;\n    font-weight: bold;\n}\n\n.add-task:active,\n#add-project:active {\n    font-size: calc(1rem - 1px);\n}\n\n/* DIALOG */\n::backdrop {\n    background-color: black;\n    opacity: 25%;\n}\n\ndialog {\n    border: none;\n    box-shadow: 0 0 10px var(--color-brand);\n    border-radius: 10px;\n    padding: 20px;\n\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\ndialog input,\ndialog select {\n    height: 2rem;\n    border-radius: 10px;\n    border: none;\n    outline: none;\n    background-color: var(--color-side-bar);\n    padding: 0 1rem;\n}\n\nform {\n    display: flex;\n    gap: 10px;\n}\n\n.input,\n.select {\n    display: flex;\n    flex-direction: column;\n}\n\n#btn-task-add,\n#btn-project-add {\n    height: 2rem;\n    width: 5rem;\n    font-size: 1rem;\n    margin-left: 1rem;\n\n    background-color: var(--color-brand);\n    color: white;\n    border: none;\n    border-radius: 1rem;\n\n    align-self: flex-end;\n}\n\n#btn-task-add:hover,\n#btn-project-add:hover {\n    box-shadow: 0 0 10px var(--color-brand);\n}\n\n.close-wrapper {\n    margin-bottom: 10px;\n    font-size: 18px;\n    display: flex;\n    justify-content: space-between;\n}\n\n#btn-task-close,\n#btn-project-close {\n    border: none;\n    background-color: transparent;\n    color: red;\n    font-size: 18px;\n}\n\n#btn-task-close:hover,\n#btn-project-close:hover {\n    text-shadow: 0 0 10px red;\n}\n\n#btn-task-close:active\n#btn-project-close:active {\n    text-shadow: 0 0 1px red;\n    font-size: 17px;\n}\n","",{version:3,sources:["webpack://./src/css/main.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,cAAc;IACd,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,iBAAiB;IACjB,kCAAkC;IAClC,mBAAmB;;IAEnB,mCAAmC;;IAEnC,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,uCAAuC;IACvC,mBAAmB;IACnB,kBAAkB;;IAElB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA,SAAS;AACT;IACI,mCAAmC;IACnC,kBAAkB;IAClB,kBAAkB;;IAElB,uCAAuC;IACvC,yCAAyC;IACzC,0CAA0C;;IAE1C,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,wCAAwC;IACxC,0CAA0C;IAC1C,2CAA2C;AAC/C;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,mCAAmC;AACvC;;AAEA,cAAc;AACd;IACI,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,qBAAqB;AACzB;;AAEA,aAAa;AACb;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;;IAEI,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;;IAEI,mBAAmB;IACnB,YAAY;IACZ,6BAA6B;AACjC;;AAEA;;IAEI,YAAY;IACZ,aAAa;AACjB;;AAEA,aAAa;AACb;;IAEI,8BAA8B;AAClC;;AAEA;;IAEI,cAAc;IACd,6BAA6B;IAC7B,yBAAyB;IACzB,YAAY;IACZ,iBAAiB;IACjB,eAAe;IACf,kBAAkB;AACtB;;AAEA;;IAEI,eAAe;IACf,iBAAiB;AACrB;;AAEA;;IAEI,2BAA2B;AAC/B;;AAEA,WAAW;AACX;IACI,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,uCAAuC;IACvC,mBAAmB;IACnB,aAAa;;IAEb,eAAe;IACf,QAAQ;IACR,SAAS;IACT,gCAAgC;AACpC;;AAEA;;IAEI,YAAY;IACZ,mBAAmB;IACnB,YAAY;IACZ,aAAa;IACb,uCAAuC;IACvC,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;;IAEI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;;IAEI,YAAY;IACZ,WAAW;IACX,eAAe;IACf,iBAAiB;;IAEjB,oCAAoC;IACpC,YAAY;IACZ,YAAY;IACZ,mBAAmB;;IAEnB,oBAAoB;AACxB;;AAEA;;IAEI,uCAAuC;AAC3C;;AAEA;IACI,mBAAmB;IACnB,eAAe;IACf,aAAa;IACb,8BAA8B;AAClC;;AAEA;;IAEI,YAAY;IACZ,6BAA6B;IAC7B,UAAU;IACV,eAAe;AACnB;;AAEA;;IAEI,yBAAyB;AAC7B;;AAEA;;IAEI,wBAAwB;IACxB,eAAe;AACnB",sourcesContent:[":root {\n    --color-main: #f0f9ff;\n    --red: #ef4444;\n    --yellow: #eab308;\n    --green: #22c55e;\n}\n\n#main {\n    box-sizing: border-box;\n    min-height: 100vh;\n    margin-left: var(--width-side-bar);\n    padding: 50px 100px;\n\n    background-color: var(--color-main);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.title {\n    font-size: 18px;\n}\n\n#main-content {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.project {\n    background-color: var(--color-side-bar);\n    border-radius: 10px;\n    padding: 20px 40px;\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.project-title {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.divider {\n    width: 100%;\n    border-bottom: 1px solid grey;\n}\n\n.project-task {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n/* TASK */\n.task {\n    background-color: var(--color-main);\n    border-radius: 5px;\n    padding: 10px 20px;\n\n    border-top: 1px solid var(--color-main);\n    border-right: 1px solid var(--color-main);\n    border-bottom: 1px solid var(--color-main);\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 1rem;\n}\n\n.task:hover {\n    border-top: 1px solid var(--color-brand);\n    border-right: 1px solid var(--color-brand);\n    border-bottom: 1px solid var(--color-brand);\n}\n\n.high {\n    border-left: 5px solid var(--red);\n}\n\n.medium {\n    border-left: 5px solid var(--yellow);\n}\n\n.low {\n    border-left: 5px solid var(--green);\n}\n\n/* TASK INFO */\n.task-info {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\ninput.status {\n    transform: scale(1.2);\n}\n\n/* TASK END */\n.task-end {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.days-left,\n.due-date {\n    width: 14ch;\n}\n\n.from {\n    width: 20ch;\n}\n\n.overdue {\n    color: var(--red);\n}\n\n.hidden {\n    visibility: hidden;\n}\n\n.cross {\n    text-decoration: line-through;\n}\n\n.done {\n    color: var(--green);\n    font-style: italic;\n}\n\n.delete-task,\n.delete-project {\n    height: fit-content;\n    border: none;\n    background-color: transparent;\n}\n\n.delete-task > img,\n.delete-project > img {\n    height: 24px;\n    display: flex;\n}\n\n/* ADD TASK */\n.add-task-wrapper,\n.add-project-wrapper {\n    height: var(--height-add-task);\n}\n\n.add-task,\n#add-project {\n    height: 1.5rem;\n    background-color: transparent;\n    color: var(--color-brand);\n    border: none;\n    padding: 5px 10px;\n    font-size: 1rem;\n    font-style: italic;\n}\n\n.add-task:hover,\n#add-project:hover {\n    cursor: pointer;\n    font-weight: bold;\n}\n\n.add-task:active,\n#add-project:active {\n    font-size: calc(1rem - 1px);\n}\n\n/* DIALOG */\n::backdrop {\n    background-color: black;\n    opacity: 25%;\n}\n\ndialog {\n    border: none;\n    box-shadow: 0 0 10px var(--color-brand);\n    border-radius: 10px;\n    padding: 20px;\n\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\ndialog input,\ndialog select {\n    height: 2rem;\n    border-radius: 10px;\n    border: none;\n    outline: none;\n    background-color: var(--color-side-bar);\n    padding: 0 1rem;\n}\n\nform {\n    display: flex;\n    gap: 10px;\n}\n\n.input,\n.select {\n    display: flex;\n    flex-direction: column;\n}\n\n#btn-task-add,\n#btn-project-add {\n    height: 2rem;\n    width: 5rem;\n    font-size: 1rem;\n    margin-left: 1rem;\n\n    background-color: var(--color-brand);\n    color: white;\n    border: none;\n    border-radius: 1rem;\n\n    align-self: flex-end;\n}\n\n#btn-task-add:hover,\n#btn-project-add:hover {\n    box-shadow: 0 0 10px var(--color-brand);\n}\n\n.close-wrapper {\n    margin-bottom: 10px;\n    font-size: 18px;\n    display: flex;\n    justify-content: space-between;\n}\n\n#btn-task-close,\n#btn-project-close {\n    border: none;\n    background-color: transparent;\n    color: red;\n    font-size: 18px;\n}\n\n#btn-task-close:hover,\n#btn-project-close:hover {\n    text-shadow: 0 0 10px red;\n}\n\n#btn-task-close:active\n#btn-project-close:active {\n    text-shadow: 0 0 1px red;\n    font-size: 17px;\n}\n"],sourceRoot:""}]);const i=A},8:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),a=t(645),A=t.n(a)()(r());A.push([n.id,":root {\n    --color-side-bar: #e0f2fe;\n    --color-brand: #0ea5e9;\n    --color-select: #bae6fd;\n    --width-side-bar: 20vw;\n}\n\n#side-bar {\n    box-sizing: border-box;\n    min-height: 100vh;\n    width: var(--width-side-bar);\n    padding: 20px;\n\n    background-color: var(--color-side-bar);\n    box-shadow: 0 0 10px grey;\n    z-index: 1;\n    \n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n\n    position: fixed;\n    top: 0;\n}\n\n#brand > img {\n    height: 48px;\n}\n\n#brand {\n    color: var(--color-brand);\n    font-size: 18px;\n    font-weight: bold;\n\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile {\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile > img {\n    background-color: white;\n    height: 48px;\n    border-radius: 24px;\n}\n\n#menu {\n    display: grid;\n    gap: 10px;\n}\n\n#menu > li {\n    height: 2rem;\n    border-radius: 10px;\n    padding-left: 1rem;\n\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n#menu > li > img {\n    height: 24px;\n}\n\n#menu > li:hover,\n#menu > li.active {\n    cursor: pointer;\n    background-color: var(--color-select);\n    color: var(--color-brand);\n    font-weight: bold;\n}\n\n#menu > li.active {\n    font-style: italic;\n}\n","",{version:3,sources:["webpack://./src/css/side-bar.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,sBAAsB;IACtB,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,sBAAsB;IACtB,iBAAiB;IACjB,4BAA4B;IAC5B,aAAa;;IAEb,uCAAuC;IACvC,yBAAyB;IACzB,UAAU;;IAEV,aAAa;IACb,sBAAsB;IACtB,SAAS;;IAET,eAAe;IACf,MAAM;AACV;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,eAAe;IACf,iBAAiB;;IAEjB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,uBAAuB;IACvB,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,mBAAmB;IACnB,kBAAkB;;IAElB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,YAAY;AAChB;;AAEA;;IAEI,eAAe;IACf,qCAAqC;IACrC,yBAAyB;IACzB,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:[":root {\n    --color-side-bar: #e0f2fe;\n    --color-brand: #0ea5e9;\n    --color-select: #bae6fd;\n    --width-side-bar: 20vw;\n}\n\n#side-bar {\n    box-sizing: border-box;\n    min-height: 100vh;\n    width: var(--width-side-bar);\n    padding: 20px;\n\n    background-color: var(--color-side-bar);\n    box-shadow: 0 0 10px grey;\n    z-index: 1;\n    \n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n\n    position: fixed;\n    top: 0;\n}\n\n#brand > img {\n    height: 48px;\n}\n\n#brand {\n    color: var(--color-brand);\n    font-size: 18px;\n    font-weight: bold;\n\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile {\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile > img {\n    background-color: white;\n    height: 48px;\n    border-radius: 24px;\n}\n\n#menu {\n    display: grid;\n    gap: 10px;\n}\n\n#menu > li {\n    height: 2rem;\n    border-radius: 10px;\n    padding-left: 1rem;\n\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n#menu > li > img {\n    height: 24px;\n}\n\n#menu > li:hover,\n#menu > li.active {\n    cursor: pointer;\n    background-color: var(--color-select);\n    color: var(--color-brand);\n    font-weight: bold;\n}\n\n#menu > li.active {\n    font-style: italic;\n}\n"],sourceRoot:""}]);const i=A},402:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(537),r=t.n(o),a=t(645),A=t.n(a),i=t(667),c=t.n(i),s=new URL(t(460),t.b),d=A()(r()),l=c()(s);d.push([n.id,`@font-face {\n    font-family: 'Varela Round';\n    src: url(${l});\n}\n\n:root {\n    --font-content: 'Varela Round';\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\nli {\n    list-style: none;\n}\n\nbody,\ninput,\nselect,\nbutton {\n    font-family: var(--font-content);\n}\n`,"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B,4CAAyC;AAC7C;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;;;IAII,gCAAgC;AACpC",sourcesContent:["@font-face {\n    font-family: 'Varela Round';\n    src: url(../font/VarelaRound-Regular.ttf);\n}\n\n:root {\n    --font-content: 'Varela Round';\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\nli {\n    list-style: none;\n}\n\nbody,\ninput,\nselect,\nbutton {\n    font-family: var(--font-content);\n}\n"],sourceRoot:""}]);const p=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(A[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);o&&A[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},A=[],i=0;i<n.length;i++){var c=n[i],s=o.base?c[0]+o.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=i,e.splice(i,0,{identifier:l,updater:f,references:1})}A.push(l)}return A}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var A=0;A<a.length;A++){var i=t(a[A]);e[i].references--}for(var c=o(n,r),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},460:(n,e,t)=>{n.exports=t.p+"e67ccd4a92677fdf8719.ttf"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!n;)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),A=t.n(a),i=t(565),c=t.n(i),s=t(216),d=t.n(s),l=t(589),p=t.n(l),u=t(402),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=A().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=d(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;var m=t(8),C={};C.styleTagTransform=p(),C.setAttributes=c(),C.insert=A().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=d(),e()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;var b=t(556),I={};function g(n){const e=document.createElement("div");return e.textContent=n,e}function h(n,e){const t=document.createElement("img");return t.src=n,t.alt=e,t}function x(n){const e=document.createElement("div");return e.id=n,e}function B(n){const e=document.createElement("div");return e.classList.add(n),e}function v(n,e,...t){const o=y(n),r=document.createElement("input");r.type=e,r.id=E(n),r.name=r.id,r.required=!0,"first"===[...t][0]&&(r.autofocus="on");const a=B("input");return a.append(o,r),a}function y(n){const e=document.createElement("label");return e.textContent=n,e.htmlFor=E(n),e}function k(n,e){const t=document.createElement("button");return t.append(n),t.id=e,t}function E(n){let e="";return e=n.split(" ").length>1?n.toLowerCase().split(" ").join("-"):n.toLowerCase(),e}function w(n){const e=n.split("-"),t=function(){const n=new Date,e=n.getDate(),t=n.getMonth()+1;return`${n.getFullYear()}-${t}-${e}`}().split("-"),o=new Date(e[0],e[1],e[2]),r=new Date(t[0],t[1],t[2]);return Math.round((o-r)/864e5)}I.styleTagTransform=p(),I.setAttributes=c(),I.insert=A().bind(null,"head"),I.domAPI=r(),I.insertStyleElement=d(),e()(b.Z,I),b.Z&&b.Z.locals&&b.Z.locals;const j=t.p+"32924a17e030bc9fbb9f.png",S=t.p+"faa12a6fbf61652859ec.png",T=t.p+"a7632e6a5f923dccde7e.png",q=t.p+"46855fcc55490d4f9ca3.png",z=(()=>{class n{constructor(n,e,t){this.name=n,this.src=e,this.alt=t}getId(){return this.name.toLowerCase().split(" ").join("-")}}function e(n){const e=h(n.src,n.alt),t=g(n.name),o=document.createElement("li");return o.append(e,t),o.id=n.getId(),o}return{init:function(){const t=function(){const n=h(j,"Todo Icon"),e=g("todo list"),t=x("brand");return t.append(n,e),t}(),o=function(){const n=h("",""),e=g(""),t=x("profile");return t.append(n,e),t}(),r=function(n){const t=document.createElement("ul");t.id="menu";for(const o of n){const n=e(o);t.append(n)}return t}([new n("Today",S,"Calendar Icon"),new n("Upcoming",T,"Calendar with Dots Icon"),new n("My Projects",q,"Multiple Book Icon")]),a=x("side-bar");return a.append(t,o,r),a},setProfile:function(n){const e=document.querySelector("#profile"),t=e.querySelector("img"),o=e.querySelector("div");t.src=n.icon.src,t.alt=n.icon.alt,o.textContent=n.name}}})(),Y=t.p+"13ebe65d027784fc9fb1.png",D=t.p+"effbb9618e7f92263a7c.png",L=(()=>{let n=null,e=null;const t=["Low","Medium","High"];function o(n,e){const t=B("project");for(const o of e.projects)for(const e of o.tasks)switch(n){case"today":0===w(e.dueDate)&&t.append(a(e,o.title));break;case"upcoming":w(e.dueDate)>0&&t.append(a(e,o.title))}if(0===t.children.length)switch(n){case"today":t.textContent="No task today!";break;case"upcoming":t.textContent="No upcoming task!"}return[t]}function r(n,e){const t=g(n),o=i(`p-${e}`,"delete-project"),r=B("project-title");r.append(t,o);const a=B("divider"),A=B("project");return A.append(r,a),A}function a(n,e){const t=document.createElement("input");t.type="checkbox",t.name="status",t.classList.add("status"),t.id=`s-${n.projectId}-${n.id}`,t.checked=n.status;const o=B("desc");o.textContent=n.description;const r=B("task-info");r.append(t,o);const a=B("days-left"),A=w(n.dueDate);a.textContent=function(n){if(n>=0)return n>1?`${n} days left`:`${n} day left`;{const e=Math.abs(n);return-1===n?`${e} day overdue`:`${e} days overdue`}}(A);const c=i(`t-${n.projectId}-${n.id}`,"delete-task"),s=B("task-end");if(null===e){const e=B("due-date");if(e.textContent="Due: "+n.dueDate,!1===n.status)A<0&&a.classList.add("overdue");else{a.classList.add("hidden"),e.classList.add("hidden"),o.classList.add("cross");const n=B("done");n.textContent="DONE",r.append(n)}s.append(a,e,c)}else{const t=B("from");if(t.textContent=`~ ${e}`,!0===n.status){o.classList.add("cross");const n=B("done");n.textContent="DONE",r.append(n)}A>0?s.append(a,t,c):s.append(t,c)}const d=B("task");return d.append(r,s),d.classList.add(function(n){return n.toLowerCase()}(n.priority)),d.id=`t-${n.id}`,d}function A(n){const e=k("+ Add Task",`tp-${n}`);e.classList.add("add-task");const t=B("add-task-wrapper");return t.append(e),t}function i(n,e){const t=h(Y,"Delete Icon"),o=k(t,n);return o.classList.add(e),t.onmouseover=function(){t.src=D},t.onmouseout=function(){t.src=Y},o}return{init:function(){n=B("title"),e=x("main-content");const o=function(){const n=v("Description","text","first"),e=v("Due Date","date"),o=function(n,e){const t=y(n),o=document.createElement("select");o.id=n.toLowerCase(),o.name=o.id,o.required=!0;for(const n of e)o.add(new Option(n,n.toLowerCase()),void 0);const r=B("select");return r.append(t,o),r}("Priority",t),r=k("Add","btn-task-add");r.type="submit";const a=document.createElement("form");a.method="dialog",a.id="form-add-task",a.append(n,e,o,r);const A=g("New Task"),i=k("X","btn-task-close"),c=B("close-wrapper");c.append(A,i);const s=document.createElement("dialog");return s.id="dialog-add-task",s.append(c,a),s}(),r=function(){const n=v("Title","text","first"),e=k("Add","btn-project-add");e.type="submit";const t=document.createElement("form");t.method="dialog",t.id="form-add-project",t.append(n,e);const o=g("New Project"),r=k("X","btn-project-close"),a=B("close-wrapper");a.append(o,r);const A=document.createElement("dialog");return A.id="dialog-add-project",A.append(a,t),A}(),a=x("main");return a.append(n,e,o,r),a},render:function(t,i){n.textContent=t,function(n){for(;n.children.length>0;)n.removeChild(n.lastChild)}(e);const c=function(n,e){switch(n){case"Today":return o("today",e);case"Upcoming":return o("upcoming",e);case"My Projects":return function(n){let e=[];for(const t of n.projects){const n=r(t.title,t.id),o=B("project-task");if(0===t.tasks.length)o.append(g("No task found."));else for(const n of t.tasks)o.append(a(n,null));n.append(o,A(t.id)),e.push(n)}return e}(e)}}(t,i);for(const n of c)e.append(n);"My Projects"===t&&e.append(function(){const n=k("+ Add Project","add-project"),e=B("add-project-wrapper");return e.append(n),e}())}}})(),Z=t.p+"c4eb6f5e9678529fae02.png",M=(()=>{let n=null;function e(){localStorage.setItem("todoUser",JSON.stringify(n))}class t{constructor(n){this.name=n}icon={src:null,alt:null};projects=[]}class o{constructor(n,e){this.title=n,this.id=a(e)}tasks=[];notes;checklist}class r{constructor(n,e,t,o,r){this.description=n,this.dueDate=e,this.priority=t,this.id=a(o),this.projectId=r}status=!1}function a(n){if(0===n.length)return 1;let e=[];for(const t of n)e.push(t.id);return Math.max(...e)+1}function A(n,e){return n.findIndex((n=>n.id===e))}function i(n){return parseInt(n.split("-")[1])}function c(n){return parseInt(n.split("-")[2])}return{init:function(){const r=localStorage.getItem("todoUser");!1===function(n){return null!==n}(r)?(n=function(n){const e=new t("John");e.icon.src=Z,e.icon.alt="Topguntocat";const r=new o("Default",e.projects);return e.projects.push(r),e}(),e()):n=JSON.parse(r)},refresh:function(){return n},addTask:function(t,o,a,c){const s=i(c),d=A(n.projects,s),l=new r(t,o,a,n.projects[d].tasks,s);n.projects[d].tasks.push(l),e()},addProject:function(t){const r=new o(t,n.projects);n.projects.push(r),e()},deleteItem:function(t,o){const r=A(n.projects,i(o));switch(t){case"task":const e=A(n.projects[r].tasks,c(o));n.projects[r].tasks.splice(e,1);break;case"project":n.projects.splice(r,1)}e()},setTaskStatus:function(t,o){const r=A(n.projects,i(t)),a=A(n.projects[r].tasks,c(t));n.projects[r].tasks[a].status=o,e()}}})();(()=>{const n=document.querySelector("#content");let e=null,t=null,o=null,r=null,a=null;function A(n){var e,o;e=n,o="active",null!==t&&t.classList.remove(o),e.classList.add(o),t=e,c()}function i(n,t){n.close(),t.reset(),e=M.refresh(),c()}function c(){L.render(t.textContent,e),document.querySelectorAll(".add-task").forEach((n=>{n.onclick=function(){o.showModal(),a=n.id}})),function(){const n=document.querySelector("#add-project");null!==n&&(n.onclick=function(){r.showModal()})}(),document.querySelectorAll(".delete-task").forEach((n=>{n.onclick=function(){M.deleteItem("task",n.id),e=M.refresh(),c()}})),document.querySelectorAll(".delete-project").forEach((n=>{n.onclick=function(){M.deleteItem("project",n.id),e=M.refresh(),c()}})),document.querySelectorAll(".status").forEach((n=>{n.onclick=function(){M.setTaskStatus(n.id,n.checked),e=M.refresh(),c()}}))}return{init:function(){document.title="Todo List",n.append(z.init(),L.init()),M.init(),e=M.refresh(),z.setProfile(e),A(document.querySelector("#today")),document.querySelectorAll("#menu > li").forEach((n=>{n.onclick=function(){A(n)}}));const t=document.querySelector("#btn-task-close"),c=document.querySelector("#btn-project-close");o=document.querySelector("#dialog-add-task"),r=document.querySelector("#dialog-add-project");const s=document.querySelector("#form-add-task"),d=document.querySelector("#form-add-project");t.onclick=function(){o.close(),s.reset()},c.onclick=function(){r.close(),d.reset()};const l=document.querySelector("#btn-task-add"),p=document.querySelector("#description"),u=document.querySelector("#due-date"),f=document.querySelector("#priority");l.onclick=function(n){""!==p.value&&""!==u.value&&(n.preventDefault(),M.addTask(p.value,u.value,f.value,a),i(o,s))};const m=document.querySelector("#btn-project-add"),C=document.querySelector("#title");m.onclick=function(n){""!==C.value&&(n.preventDefault(),M.addProject(C.value),i(r,d))}}}})().init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,