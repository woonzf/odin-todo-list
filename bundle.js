(()=>{"use strict";var n={556:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,":root {\n    --color-main: #f0f9ff;\n}\n\n#main {\n    box-sizing: border-box;\n    min-height: 100vh;\n    margin-left: var(--width-side-bar);\n    padding: 50px 100px;\n\n    background-color: var(--color-main);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n#title {\n    font-size: 18px;\n}\n\n.project {\n    background-color: var(--color-side-bar);\n    border-radius: 10px;\n    padding: 20px 40px;\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.divider {\n    width: 100%;\n    border-bottom: 1px solid grey;\n}\n\n.project-task {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.task {\n    background-color: var(--color-main);\n    border-radius: 5px;\n    padding: 10px;\n    padding-left: 20px;\n}\n\n.task:hover {\n    box-shadow: 0 0 10px var(--color-brand);\n}\n\n.high {\n    border-left: 5px solid #ef4444;\n}\n\n.medium {\n    border-left: 5px solid #eab308;\n}\n\n.low {\n    border-left: 5px solid #22c55e;\n}\n\n.add-task-wrapper {\n    height: var(--height-add-task);\n}\n\n.add-task {\n    height: 1.5rem;\n    background-color: transparent;\n    color: var(--color-brand);\n    border: none;\n    padding: 5px 10px;\n    font-size: 1rem;\n    font-style: italic;\n}\n\n.add-task:hover {\n    cursor: pointer;\n}\n\n.add-task:active {\n    font-size: calc(1rem - 1px);\n}\n\n/* DIALOG */\n::backdrop {\n    background-color: black;\n    opacity: 25%;\n}\n\ninput,\nselect {\n    height: 2rem;\n    border-radius: 10px;\n    border: none;\n    outline: none;\n    background-color: var(--color-side-bar);\n    padding: 0 1rem;\n}\n\n#dialog-add-task {\n    border: none;\n    box-shadow: 0 0 10px var(--color-brand);\n    border-radius: 10px;\n    padding: 20px;\n\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n#form-add-task {\n    display: flex;\n    gap: 10px;\n}\n\n.input,\n.select {\n    display: flex;\n    flex-direction: column;\n}\n\n#btn-task-add {\n    height: 2rem;\n    width: 5rem;\n    font-size: 1rem;\n    margin-left: 1rem;\n\n    background-color: var(--color-brand);\n    color: white;\n    border: none;\n    border-radius: 1rem;\n\n    align-self: flex-end;\n}\n\n#btn-task-add:hover {\n    box-shadow: 0 0 10px var(--color-brand);\n}\n\n#close-wrapper {\n    margin-bottom: 10px;\n    font-size: 18px;\n    display: flex;\n    justify-content: space-between;\n}\n\n#btn-task-close {\n    border: none;\n    background-color: transparent;\n    color: red;\n    font-size: 18px;\n}\n\n#btn-task-close:hover {\n    text-shadow: 0 0 10px red;\n}\n\n#btn-task-close:active {\n    text-shadow: 0 0 1px red;\n    font-size: 17px;\n}\n","",{version:3,sources:["webpack://./src/css/main.css"],names:[],mappings:"AAAA;IACI,qBAAqB;AACzB;;AAEA;IACI,sBAAsB;IACtB,iBAAiB;IACjB,kCAAkC;IAClC,mBAAmB;;IAEnB,mCAAmC;;IAEnC,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,uCAAuC;IACvC,mBAAmB;IACnB,kBAAkB;;IAElB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,mCAAmC;IACnC,kBAAkB;IAClB,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,cAAc;IACd,6BAA6B;IAC7B,yBAAyB;IACzB,YAAY;IACZ,iBAAiB;IACjB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA,WAAW;AACX;IACI,uBAAuB;IACvB,YAAY;AAChB;;AAEA;;IAEI,YAAY;IACZ,mBAAmB;IACnB,YAAY;IACZ,aAAa;IACb,uCAAuC;IACvC,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,uCAAuC;IACvC,mBAAmB;IACnB,aAAa;;IAEb,eAAe;IACf,QAAQ;IACR,SAAS;IACT,gCAAgC;AACpC;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;;IAEI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,eAAe;IACf,iBAAiB;;IAEjB,oCAAoC;IACpC,YAAY;IACZ,YAAY;IACZ,mBAAmB;;IAEnB,oBAAoB;AACxB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,mBAAmB;IACnB,eAAe;IACf,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,YAAY;IACZ,6BAA6B;IAC7B,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,wBAAwB;IACxB,eAAe;AACnB",sourcesContent:[":root {\n    --color-main: #f0f9ff;\n}\n\n#main {\n    box-sizing: border-box;\n    min-height: 100vh;\n    margin-left: var(--width-side-bar);\n    padding: 50px 100px;\n\n    background-color: var(--color-main);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n#title {\n    font-size: 18px;\n}\n\n.project {\n    background-color: var(--color-side-bar);\n    border-radius: 10px;\n    padding: 20px 40px;\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.divider {\n    width: 100%;\n    border-bottom: 1px solid grey;\n}\n\n.project-task {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.task {\n    background-color: var(--color-main);\n    border-radius: 5px;\n    padding: 10px;\n    padding-left: 20px;\n}\n\n.task:hover {\n    box-shadow: 0 0 10px var(--color-brand);\n}\n\n.high {\n    border-left: 5px solid #ef4444;\n}\n\n.medium {\n    border-left: 5px solid #eab308;\n}\n\n.low {\n    border-left: 5px solid #22c55e;\n}\n\n.add-task-wrapper {\n    height: var(--height-add-task);\n}\n\n.add-task {\n    height: 1.5rem;\n    background-color: transparent;\n    color: var(--color-brand);\n    border: none;\n    padding: 5px 10px;\n    font-size: 1rem;\n    font-style: italic;\n}\n\n.add-task:hover {\n    cursor: pointer;\n}\n\n.add-task:active {\n    font-size: calc(1rem - 1px);\n}\n\n/* DIALOG */\n::backdrop {\n    background-color: black;\n    opacity: 25%;\n}\n\ninput,\nselect {\n    height: 2rem;\n    border-radius: 10px;\n    border: none;\n    outline: none;\n    background-color: var(--color-side-bar);\n    padding: 0 1rem;\n}\n\n#dialog-add-task {\n    border: none;\n    box-shadow: 0 0 10px var(--color-brand);\n    border-radius: 10px;\n    padding: 20px;\n\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n#form-add-task {\n    display: flex;\n    gap: 10px;\n}\n\n.input,\n.select {\n    display: flex;\n    flex-direction: column;\n}\n\n#btn-task-add {\n    height: 2rem;\n    width: 5rem;\n    font-size: 1rem;\n    margin-left: 1rem;\n\n    background-color: var(--color-brand);\n    color: white;\n    border: none;\n    border-radius: 1rem;\n\n    align-self: flex-end;\n}\n\n#btn-task-add:hover {\n    box-shadow: 0 0 10px var(--color-brand);\n}\n\n#close-wrapper {\n    margin-bottom: 10px;\n    font-size: 18px;\n    display: flex;\n    justify-content: space-between;\n}\n\n#btn-task-close {\n    border: none;\n    background-color: transparent;\n    color: red;\n    font-size: 18px;\n}\n\n#btn-task-close:hover {\n    text-shadow: 0 0 10px red;\n}\n\n#btn-task-close:active {\n    text-shadow: 0 0 1px red;\n    font-size: 17px;\n}\n"],sourceRoot:""}]);const A=i},8:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,":root {\n    --color-side-bar: #e0f2fe;\n    --color-brand: #0ea5e9;\n    --color-select: #bae6fd;\n    --width-side-bar: 20vw;\n}\n\n#side-bar {\n    box-sizing: border-box;\n    min-height: 100vh;\n    width: var(--width-side-bar);\n    padding: 20px;\n\n    background-color: var(--color-side-bar);\n    box-shadow: 0 0 10px grey;\n    z-index: 1;\n    \n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n\n    position: fixed;\n    top: 0;\n}\n\n#brand > img {\n    height: 48px;\n}\n\n#brand {\n    color: var(--color-brand);\n    font-size: 18px;\n    font-weight: bold;\n\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile {\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile > img {\n    background-color: white;\n    height: 48px;\n    border-radius: 24px;\n}\n\n#menu {\n    display: grid;\n    gap: 10px;\n}\n\n#menu > li {\n    height: 2rem;\n    border-radius: 10px;\n    padding-left: 1rem;\n\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n#menu > li > img {\n    height: 24px;\n}\n\n#menu > li:hover,\n#menu > li.active {\n    cursor: pointer;\n    background-color: var(--color-select);\n    color: var(--color-brand);\n    font-weight: bold;\n}\n\n#menu > li.active {\n    font-style: italic;\n}\n","",{version:3,sources:["webpack://./src/css/side-bar.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,sBAAsB;IACtB,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,sBAAsB;IACtB,iBAAiB;IACjB,4BAA4B;IAC5B,aAAa;;IAEb,uCAAuC;IACvC,yBAAyB;IACzB,UAAU;;IAEV,aAAa;IACb,sBAAsB;IACtB,SAAS;;IAET,eAAe;IACf,MAAM;AACV;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,eAAe;IACf,iBAAiB;;IAEjB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,uBAAuB;IACvB,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,mBAAmB;IACnB,kBAAkB;;IAElB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,YAAY;AAChB;;AAEA;;IAEI,eAAe;IACf,qCAAqC;IACrC,yBAAyB;IACzB,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:[":root {\n    --color-side-bar: #e0f2fe;\n    --color-brand: #0ea5e9;\n    --color-select: #bae6fd;\n    --width-side-bar: 20vw;\n}\n\n#side-bar {\n    box-sizing: border-box;\n    min-height: 100vh;\n    width: var(--width-side-bar);\n    padding: 20px;\n\n    background-color: var(--color-side-bar);\n    box-shadow: 0 0 10px grey;\n    z-index: 1;\n    \n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n\n    position: fixed;\n    top: 0;\n}\n\n#brand > img {\n    height: 48px;\n}\n\n#brand {\n    color: var(--color-brand);\n    font-size: 18px;\n    font-weight: bold;\n\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile {\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile > img {\n    background-color: white;\n    height: 48px;\n    border-radius: 24px;\n}\n\n#menu {\n    display: grid;\n    gap: 10px;\n}\n\n#menu > li {\n    height: 2rem;\n    border-radius: 10px;\n    padding-left: 1rem;\n\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n#menu > li > img {\n    height: 24px;\n}\n\n#menu > li:hover,\n#menu > li.active {\n    cursor: pointer;\n    background-color: var(--color-select);\n    color: var(--color-brand);\n    font-weight: bold;\n}\n\n#menu > li.active {\n    font-style: italic;\n}\n"],sourceRoot:""}]);const A=i},402:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),A=t(667),c=t.n(A),s=new URL(t(460),t.b),d=i()(r()),l=c()(s);d.push([n.id,`@font-face {\n    font-family: 'Varela Round';\n    src: url(${l});\n}\n\n:root {\n    --font-content: 'Varela Round';\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\nli {\n    list-style: none;\n}\n\nbody,\ninput,\nselect,\nbutton {\n    font-family: var(--font-content);\n}\n`,"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B,4CAAyC;AAC7C;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;;;IAII,gCAAgC;AACpC",sourcesContent:["@font-face {\n    font-family: 'Varela Round';\n    src: url(../font/VarelaRound-Regular.ttf);\n}\n\n:root {\n    --font-content: 'Varela Round';\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\nli {\n    list-style: none;\n}\n\nbody,\ninput,\nselect,\nbutton {\n    font-family: var(--font-content);\n}\n"],sourceRoot:""}]);const p=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=o.base?c[0]+o.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=A,e.splice(A,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=o(n,r),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},460:(n,e,t)=>{n.exports=t.p+"e67ccd4a92677fdf8719.ttf"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!n;)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),A=t(565),c=t.n(A),s=t(216),d=t.n(s),l=t(589),p=t.n(l),u=t(402),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=d(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;var m=t(8),C={};C.styleTagTransform=p(),C.setAttributes=c(),C.insert=i().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=d(),e()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;var b=t(556),I={};function g(n){const e=document.createElement("div");return e.textContent=n,e}function h(n,e){const t=document.createElement("img");return t.src=n,t.alt=e,t}function x(n){const e=document.createElement("div");return e.id=n,e}function B(n){const e=document.createElement("div");return e.classList.add(n),e}function v(n,e,...t){const o=y(n),r=document.createElement("input");r.type=e,r.id=w(n),r.name=r.id,r.required=!0,"first"===[...t][0]&&(r.autofocus="on");const a=B("input");return a.append(o,r),a}function y(n){const e=document.createElement("label");return e.textContent=n,e.htmlFor=w(n),e}function k(n,e){const t=document.createElement("button");return t.textContent=n,t.id=e,t}function w(n){let e="";return e=n.split(" ").length>1?n.toLowerCase().split(" ").join("-"):n.toLowerCase(),e}I.styleTagTransform=p(),I.setAttributes=c(),I.insert=i().bind(null,"head"),I.domAPI=r(),I.insertStyleElement=d(),e()(b.Z,I),b.Z&&b.Z.locals&&b.Z.locals;const E=t.p+"32924a17e030bc9fbb9f.png",S=t.p+"faa12a6fbf61652859ec.png",j=t.p+"a7632e6a5f923dccde7e.png",z=t.p+"46855fcc55490d4f9ca3.png",T=(()=>{class n{constructor(n,e,t){this.name=n,this.src=e,this.alt=t}getId(){return this.name.toLowerCase().split(" ").join("-")}}function e(n){const e=h(n.src,n.alt),t=g(n.name),o=document.createElement("li");return o.append(e,t),o.id=n.getId(),o}return{init:function(){const t=function(){const n=h(E,"Todo Icon"),e=g("todo list"),t=x("brand");return t.append(n,e),t}(),o=function(){const n=h("",""),e=g(""),t=x("profile");return t.append(n,e),t}(),r=function(n){const t=document.createElement("ul");t.id="menu";for(const o of n){const n=e(o);t.append(n)}return t}([new n("Today",S,"Calendar Icon"),new n("Upcoming",j,"Calendar with Dots Icon"),new n("My Projects",z,"Multiple Book Icon")]),a=x("side-bar");return a.append(t,o,r),a}}})(),Y=(()=>{let n=null,e=null;const t=["Low","Medium","High"];function o(n){const e=B("project-title");e.textContent=n;const t=B("divider"),o=B("project");return o.append(e,t),o}function r(n){const e=B("desc");e.textContent=n.description;const t=B("due-date");t.textContent=n.dueDate;const o=B("task");return o.append(e,t),o.classList.add(function(n){return n.toLowerCase()}(n.priority)),o.id=`t-${n.id}`,o}function a(n){const e=k("+ Add Task",`p-${n}`);e.classList.add("add-task");const t=B("add-task-wrapper");return t.append(e),t}return Object.prototype.clear=function(){for(;this.children.length>0;)this.removeChild(this.lastChild)},{init:function(){n=x("title"),e=x("main-content");const o=function(){const n=v("Description","text","first"),e=v("Due Date","date"),o=function(n,e){const t=y(n),o=document.createElement("select");o.id=n.toLowerCase(),o.name=o.id,o.required=!0;for(const n of e)o.add(new Option(n,n.toLowerCase()),void 0);const r=B("select");return r.append(t,o),r}("Priority",t),r=k("Add","btn-task-add");r.type="button";const a=document.createElement("form");a.method="dialog",a.id="form-add-task",a.append(n,e,o,r);const i=g("Add a Task"),A=k("X","btn-task-close"),c=x("close-wrapper");c.append(i,A);const s=document.createElement("dialog");return s.id="dialog-add-task",s.append(c,a),s}(),r=x("main");return r.append(n,e,o),r},render:function(t,i){n.textContent=t,e.clear();const A=function(n,e){switch(n){case"Today":case"Upcoming":return[g("</>")];case"My Projects":return function(n){let e=[];for(const t of n.projects){const n=o(t.title),i=B("project-task");if(0===t.tasks.length)i.append(g("No task found."));else for(const n of t.tasks)i.append(r(n));n.append(i,a(t.id)),e.push(n)}return e}(e)}}(t,i);for(const n of A)e.append(n)}}})(),Z=t.p+"c4eb6f5e9678529fae02.png",q=(()=>{let n=null;class e{constructor(n){this.name=n}icon={src:null,alt:null};projects=[];addProject(n){this.projects.push(n)}}class t{constructor(n,e){this.title=n,this.id=r(e)}tasks=[];addTask(n){this.tasks.push(n)}notes;checklist}class o{constructor(n,e,t,o){this.description=n,this.dueDate=e,this.priority=t,this.id=r(o)}status=!1}function r(n){if(0===n.length)return 1;let e=[];for(const t of n)e.push(t.id);return Math.max(...e)+1}return{init:function(){return n=function(n){const o=new e("John");o.icon.src=Z,o.icon.alt="Topguntocat";const r=new t("Default",o.projects);return o.addProject(r),o}(),n},refresh:function(){return console.log(n),n},addNewTask:function(e,t,r,a){const i=n.projects.findIndex((n=>n.id===parseInt(a.split("-")[1]))),A=new o(e,t,r,n.projects[i].tasks);n.projects[i].addTask(A)}}})();(()=>{const n=document.querySelector("#content");let e=null,t=null,o=null,r=null,a=null;function i(n){!function(n,e){null!==t&&t.classList.remove(e),n.classList.add(e),t=n}(n,"active"),A()}function A(){Y.render(t.textContent,e),r=document.querySelectorAll(".add-task"),r.forEach((n=>{n.onclick=function(){o.showModal(),a=n.id}}))}return{init:function(){document.title="Todo List",n.append(T.init(),Y.init()),function(){e=q.init();const n=document.querySelector("#profile"),t=n.querySelector("img"),o=n.querySelector("div");t.src=e.icon.src,t.alt=e.icon.alt,o.textContent=e.name}(),i(document.querySelector("#today")),document.querySelectorAll("#menu > li").forEach((n=>{n.onclick=function(n){i(n.target)}}));const t=document.querySelector("#btn-task-close");o=document.querySelector("#dialog-add-task");const r=document.querySelector("#form-add-task");t.onclick=function(){o.close(),r.reset()};const c=document.querySelector("#btn-task-add"),s=document.querySelector("#description"),d=document.querySelector("#due-date"),l=document.querySelector("#priority");c.onclick=function(){q.addNewTask(s.value,d.value,l.value,a),o.close(),r.reset(),e=q.refresh(),A()}}}})().init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBSUQsSUFBTXdFLEVBQVExQyxLQUFLOUIsSUFDdkJhLEVBQUtmLFlBQWMwRSxFQUFRM0QsSUFDL0IsQ0FoRElrRyxHQW9EQVIsRUFEVzdLLFNBQVNDLGNBQWMsV0EvQ25CRCxTQUFTaUwsaUJBQWlCLGNBQ2xDQyxTQUFRakYsSUFDWEEsRUFBR2tGLFFBQVUsU0FBUzdLLEdBQ2xCdUssRUFBZ0J2SyxFQUFFUixPQUN0QixLQUlKLE1BQU13TCxFQUFldEwsU0FBU0MsY0FBYyxtQkFDNUM0SCxFQUFnQjdILFNBQVNDLGNBQWMsb0JBQ3ZDLE1BQU1zTCxFQUFXdkwsU0FBU0MsY0FBYyxrQkFFeENxTCxFQUFhSCxRQUFVLFdBQ25CdEQsRUFBYzJELFFBQ2RELEVBQVNFLE9BQ2IsRUFHQSxNQUFNcEQsRUFBU3JJLFNBQVNDLGNBQWMsaUJBQ2hDNkgsRUFBWTlILFNBQVNDLGNBQWMsZ0JBQ25DOEgsRUFBZS9ILFNBQVNDLGNBQWMsYUFDdEN5TCxFQUFpQjFMLFNBQVNDLGNBQWMsYUFFOUNvSSxFQUFPOEMsUUFBVSxXQUNiN0UsRUFBS2lFLFdBQVd6QyxFQUFVNkQsTUFBTzVELEVBQWE0RCxNQUFPRCxFQUFlQyxNQUFPbkIsR0FDM0UzQyxFQUFjMkQsUUFDZEQsRUFBU0UsUUFDVDNDLEVBQVV4QyxFQUFLOEQsVUFDZlksR0FDSixDQUNKLEVBZ0RILEVBN0ZZLEdBK0ZSOUUsTSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jc3MvbWFpbi5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Nzcy9zaWRlLWJhci5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Nzcy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly8vLi9zcmMvY3NzL3N0eWxlLmNzcz85ZmNkIiwid2VicGFjazovLy8uL3NyYy9jc3Mvc2lkZS1iYXIuY3NzPzk4NDgiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Nzcy9tYWluLmNzcz8yYzlmIiwid2VicGFjazovLy8uL3NyYy9qcy9mdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvc2lkZS1iYXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3VzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGA6cm9vdCB7XG4gICAgLS1jb2xvci1tYWluOiAjZjBmOWZmO1xufVxuXG4jbWFpbiB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICBtYXJnaW4tbGVmdDogdmFyKC0td2lkdGgtc2lkZS1iYXIpO1xuICAgIHBhZGRpbmc6IDUwcHggMTAwcHg7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1tYWluKTtcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDIwcHg7XG59XG5cbiN0aXRsZSB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xufVxuXG4ucHJvamVjdCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3Itc2lkZS1iYXIpO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgcGFkZGluZzogMjBweCA0MHB4O1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGdhcDogMjBweDtcbn1cblxuLmRpdmlkZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBncmV5O1xufVxuXG4ucHJvamVjdC10YXNrIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZ2FwOiAxMHB4O1xufVxuXG4udGFzayB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItbWFpbik7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xufVxuXG4udGFzazpob3ZlciB7XG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggdmFyKC0tY29sb3ItYnJhbmQpO1xufVxuXG4uaGlnaCB7XG4gICAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjZWY0NDQ0O1xufVxuXG4ubWVkaXVtIHtcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNlYWIzMDg7XG59XG5cbi5sb3cge1xuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgIzIyYzU1ZTtcbn1cblxuLmFkZC10YXNrLXdyYXBwZXIge1xuICAgIGhlaWdodDogdmFyKC0taGVpZ2h0LWFkZC10YXNrKTtcbn1cblxuLmFkZC10YXNrIHtcbiAgICBoZWlnaHQ6IDEuNXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogdmFyKC0tY29sb3ItYnJhbmQpO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4uYWRkLXRhc2s6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmFkZC10YXNrOmFjdGl2ZSB7XG4gICAgZm9udC1zaXplOiBjYWxjKDFyZW0gLSAxcHgpO1xufVxuXG4vKiBESUFMT0cgKi9cbjo6YmFja2Ryb3Age1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIG9wYWNpdHk6IDI1JTtcbn1cblxuaW5wdXQsXG5zZWxlY3Qge1xuICAgIGhlaWdodDogMnJlbTtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLXNpZGUtYmFyKTtcbiAgICBwYWRkaW5nOiAwIDFyZW07XG59XG5cbiNkaWFsb2ctYWRkLXRhc2sge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3gtc2hhZG93OiAwIDAgMTBweCB2YXIoLS1jb2xvci1icmFuZCk7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuXG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cblxuI2Zvcm0tYWRkLXRhc2sge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiAxMHB4O1xufVxuXG4uaW5wdXQsXG4uc2VsZWN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbiNidG4tdGFzay1hZGQge1xuICAgIGhlaWdodDogMnJlbTtcbiAgICB3aWR0aDogNXJlbTtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgbWFyZ2luLWxlZnQ6IDFyZW07XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1icmFuZCk7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xuXG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG59XG5cbiNidG4tdGFzay1hZGQ6aG92ZXIge1xuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHZhcigtLWNvbG9yLWJyYW5kKTtcbn1cblxuI2Nsb3NlLXdyYXBwZXIge1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4jYnRuLXRhc2stY2xvc2Uge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogcmVkO1xuICAgIGZvbnQtc2l6ZTogMThweDtcbn1cblxuI2J0bi10YXNrLWNsb3NlOmhvdmVyIHtcbiAgICB0ZXh0LXNoYWRvdzogMCAwIDEwcHggcmVkO1xufVxuXG4jYnRuLXRhc2stY2xvc2U6YWN0aXZlIHtcbiAgICB0ZXh0LXNoYWRvdzogMCAwIDFweCByZWQ7XG4gICAgZm9udC1zaXplOiAxN3B4O1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL21haW4uY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0kscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLGlCQUFpQjtJQUNqQixrQ0FBa0M7SUFDbEMsbUJBQW1COztJQUVuQixtQ0FBbUM7O0lBRW5DLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsU0FBUztBQUNiOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHVDQUF1QztJQUN2QyxtQkFBbUI7SUFDbkIsa0JBQWtCOztJQUVsQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLFdBQVc7SUFDWCw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLG1DQUFtQztJQUNuQyxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHVDQUF1QztBQUMzQzs7QUFFQTtJQUNJLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLGNBQWM7SUFDZCw2QkFBNkI7SUFDN0IseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsZUFBZTtJQUNmLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSwyQkFBMkI7QUFDL0I7O0FBRUEsV0FBVztBQUNYO0lBQ0ksdUJBQXVCO0lBQ3ZCLFlBQVk7QUFDaEI7O0FBRUE7O0lBRUksWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osYUFBYTtJQUNiLHVDQUF1QztJQUN2QyxlQUFlO0FBQ25COztBQUVBO0lBQ0ksWUFBWTtJQUNaLHVDQUF1QztJQUN2QyxtQkFBbUI7SUFDbkIsYUFBYTs7SUFFYixlQUFlO0lBQ2YsUUFBUTtJQUNSLFNBQVM7SUFDVCxnQ0FBZ0M7QUFDcEM7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsU0FBUztBQUNiOztBQUVBOztJQUVJLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLGVBQWU7SUFDZixpQkFBaUI7O0lBRWpCLG9DQUFvQztJQUNwQyxZQUFZO0lBQ1osWUFBWTtJQUNaLG1CQUFtQjs7SUFFbkIsb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixhQUFhO0lBQ2IsOEJBQThCO0FBQ2xDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDZCQUE2QjtJQUM3QixVQUFVO0lBQ1YsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLHdCQUF3QjtJQUN4QixlQUFlO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIjpyb290IHtcXG4gICAgLS1jb2xvci1tYWluOiAjZjBmOWZmO1xcbn1cXG5cXG4jbWFpbiB7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgICBtYXJnaW4tbGVmdDogdmFyKC0td2lkdGgtc2lkZS1iYXIpO1xcbiAgICBwYWRkaW5nOiA1MHB4IDEwMHB4O1xcblxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1tYWluKTtcXG5cXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAyMHB4O1xcbn1cXG5cXG4jdGl0bGUge1xcbiAgICBmb250LXNpemU6IDE4cHg7XFxufVxcblxcbi5wcm9qZWN0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3Itc2lkZS1iYXIpO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBwYWRkaW5nOiAyMHB4IDQwcHg7XFxuXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMjBweDtcXG59XFxuXFxuLmRpdmlkZXIge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGdyZXk7XFxufVxcblxcbi5wcm9qZWN0LXRhc2sge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDEwcHg7XFxufVxcblxcbi50YXNrIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItbWFpbik7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xcbn1cXG5cXG4udGFzazpob3ZlciB7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHZhcigtLWNvbG9yLWJyYW5kKTtcXG59XFxuXFxuLmhpZ2gge1xcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNlZjQ0NDQ7XFxufVxcblxcbi5tZWRpdW0ge1xcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNlYWIzMDg7XFxufVxcblxcbi5sb3cge1xcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICMyMmM1NWU7XFxufVxcblxcbi5hZGQtdGFzay13cmFwcGVyIHtcXG4gICAgaGVpZ2h0OiB2YXIoLS1oZWlnaHQtYWRkLXRhc2spO1xcbn1cXG5cXG4uYWRkLXRhc2sge1xcbiAgICBoZWlnaHQ6IDEuNXJlbTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICAgIGNvbG9yOiB2YXIoLS1jb2xvci1icmFuZCk7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgcGFkZGluZzogNXB4IDEwcHg7XFxuICAgIGZvbnQtc2l6ZTogMXJlbTtcXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xcbn1cXG5cXG4uYWRkLXRhc2s6aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5hZGQtdGFzazphY3RpdmUge1xcbiAgICBmb250LXNpemU6IGNhbGMoMXJlbSAtIDFweCk7XFxufVxcblxcbi8qIERJQUxPRyAqL1xcbjo6YmFja2Ryb3Age1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG4gICAgb3BhY2l0eTogMjUlO1xcbn1cXG5cXG5pbnB1dCxcXG5zZWxlY3Qge1xcbiAgICBoZWlnaHQ6IDJyZW07XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgb3V0bGluZTogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3Itc2lkZS1iYXIpO1xcbiAgICBwYWRkaW5nOiAwIDFyZW07XFxufVxcblxcbiNkaWFsb2ctYWRkLXRhc2sge1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHZhcigtLWNvbG9yLWJyYW5kKTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgcGFkZGluZzogMjBweDtcXG5cXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICB0b3A6IDUwJTtcXG4gICAgbGVmdDogNTAlO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcXG59XFxuXFxuI2Zvcm0tYWRkLXRhc2sge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDEwcHg7XFxufVxcblxcbi5pbnB1dCxcXG4uc2VsZWN0IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuI2J0bi10YXNrLWFkZCB7XFxuICAgIGhlaWdodDogMnJlbTtcXG4gICAgd2lkdGg6IDVyZW07XFxuICAgIGZvbnQtc2l6ZTogMXJlbTtcXG4gICAgbWFyZ2luLWxlZnQ6IDFyZW07XFxuXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLWJyYW5kKTtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XFxuXFxuICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xcbn1cXG5cXG4jYnRuLXRhc2stYWRkOmhvdmVyIHtcXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggdmFyKC0tY29sb3ItYnJhbmQpO1xcbn1cXG5cXG4jY2xvc2Utd3JhcHBlciB7XFxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XFxuICAgIGZvbnQtc2l6ZTogMThweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbn1cXG5cXG4jYnRuLXRhc2stY2xvc2Uge1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgICBjb2xvcjogcmVkO1xcbiAgICBmb250LXNpemU6IDE4cHg7XFxufVxcblxcbiNidG4tdGFzay1jbG9zZTpob3ZlciB7XFxuICAgIHRleHQtc2hhZG93OiAwIDAgMTBweCByZWQ7XFxufVxcblxcbiNidG4tdGFzay1jbG9zZTphY3RpdmUge1xcbiAgICB0ZXh0LXNoYWRvdzogMCAwIDFweCByZWQ7XFxuICAgIGZvbnQtc2l6ZTogMTdweDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGA6cm9vdCB7XG4gICAgLS1jb2xvci1zaWRlLWJhcjogI2UwZjJmZTtcbiAgICAtLWNvbG9yLWJyYW5kOiAjMGVhNWU5O1xuICAgIC0tY29sb3Itc2VsZWN0OiAjYmFlNmZkO1xuICAgIC0td2lkdGgtc2lkZS1iYXI6IDIwdnc7XG59XG5cbiNzaWRlLWJhciB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICB3aWR0aDogdmFyKC0td2lkdGgtc2lkZS1iYXIpO1xuICAgIHBhZGRpbmc6IDIwcHg7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1zaWRlLWJhcik7XG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggZ3JleTtcbiAgICB6LWluZGV4OiAxO1xuICAgIFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDIwcHg7XG5cbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xufVxuXG4jYnJhbmQgPiBpbWcge1xuICAgIGhlaWdodDogNDhweDtcbn1cblxuI2JyYW5kIHtcbiAgICBjb2xvcjogdmFyKC0tY29sb3ItYnJhbmQpO1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDEwcHg7XG59XG5cbiNwcm9maWxlIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMTBweDtcbn1cblxuI3Byb2ZpbGUgPiBpbWcge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIGhlaWdodDogNDhweDtcbiAgICBib3JkZXItcmFkaXVzOiAyNHB4O1xufVxuXG4jbWVudSB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBnYXA6IDEwcHg7XG59XG5cbiNtZW51ID4gbGkge1xuICAgIGhlaWdodDogMnJlbTtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIHBhZGRpbmctbGVmdDogMXJlbTtcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDFyZW07XG59XG5cbiNtZW51ID4gbGkgPiBpbWcge1xuICAgIGhlaWdodDogMjRweDtcbn1cblxuI21lbnUgPiBsaTpob3ZlcixcbiNtZW51ID4gbGkuYWN0aXZlIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3Itc2VsZWN0KTtcbiAgICBjb2xvcjogdmFyKC0tY29sb3ItYnJhbmQpO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4jbWVudSA+IGxpLmFjdGl2ZSB7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL3NpZGUtYmFyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLHlCQUF5QjtJQUN6QixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0QixpQkFBaUI7SUFDakIsNEJBQTRCO0lBQzVCLGFBQWE7O0lBRWIsdUNBQXVDO0lBQ3ZDLHlCQUF5QjtJQUN6QixVQUFVOztJQUVWLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsU0FBUzs7SUFFVCxlQUFlO0lBQ2YsTUFBTTtBQUNWOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixlQUFlO0lBQ2YsaUJBQWlCOztJQUVqQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGVBQWU7SUFDZixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFNBQVM7QUFDYjs7QUFFQTtJQUNJLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFNBQVM7QUFDYjs7QUFFQTtJQUNJLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsa0JBQWtCOztJQUVsQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFNBQVM7QUFDYjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7O0lBRUksZUFBZTtJQUNmLHFDQUFxQztJQUNyQyx5QkFBeUI7SUFDekIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIjpyb290IHtcXG4gICAgLS1jb2xvci1zaWRlLWJhcjogI2UwZjJmZTtcXG4gICAgLS1jb2xvci1icmFuZDogIzBlYTVlOTtcXG4gICAgLS1jb2xvci1zZWxlY3Q6ICNiYWU2ZmQ7XFxuICAgIC0td2lkdGgtc2lkZS1iYXI6IDIwdnc7XFxufVxcblxcbiNzaWRlLWJhciB7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgICB3aWR0aDogdmFyKC0td2lkdGgtc2lkZS1iYXIpO1xcbiAgICBwYWRkaW5nOiAyMHB4O1xcblxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1zaWRlLWJhcik7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IGdyZXk7XFxuICAgIHotaW5kZXg6IDE7XFxuICAgIFxcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDIwcHg7XFxuXFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgdG9wOiAwO1xcbn1cXG5cXG4jYnJhbmQgPiBpbWcge1xcbiAgICBoZWlnaHQ6IDQ4cHg7XFxufVxcblxcbiNicmFuZCB7XFxuICAgIGNvbG9yOiB2YXIoLS1jb2xvci1icmFuZCk7XFxuICAgIGZvbnQtc2l6ZTogMThweDtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuI3Byb2ZpbGUge1xcbiAgICBmb250LXNpemU6IDE4cHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuI3Byb2ZpbGUgPiBpbWcge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgaGVpZ2h0OiA0OHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiAyNHB4O1xcbn1cXG5cXG4jbWVudSB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuI21lbnUgPiBsaSB7XFxuICAgIGhlaWdodDogMnJlbTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xcblxcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDFyZW07XFxufVxcblxcbiNtZW51ID4gbGkgPiBpbWcge1xcbiAgICBoZWlnaHQ6IDI0cHg7XFxufVxcblxcbiNtZW51ID4gbGk6aG92ZXIsXFxuI21lbnUgPiBsaS5hY3RpdmUge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLXNlbGVjdCk7XFxuICAgIGNvbG9yOiB2YXIoLS1jb2xvci1icmFuZCk7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cXG5cXG4jbWVudSA+IGxpLmFjdGl2ZSB7XFxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuLi9mb250L1ZhcmVsYVJvdW5kLVJlZ3VsYXIudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBAZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1ZhcmVsYSBSb3VuZCc7XG4gICAgc3JjOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19ffSk7XG59XG5cbjpyb290IHtcbiAgICAtLWZvbnQtY29udGVudDogJ1ZhcmVsYSBSb3VuZCc7XG59XG5cbioge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG5saSB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYm9keSxcbmlucHV0LFxuc2VsZWN0LFxuYnV0dG9uIHtcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udC1jb250ZW50KTtcbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Nzcy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSwyQkFBMkI7SUFDM0IsNENBQXlDO0FBQzdDOztBQUVBO0lBQ0ksOEJBQThCO0FBQ2xDOztBQUVBO0lBQ0ksU0FBUztJQUNULFVBQVU7QUFDZDs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTs7OztJQUlJLGdDQUFnQztBQUNwQ1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdWYXJlbGEgUm91bmQnO1xcbiAgICBzcmM6IHVybCguLi9mb250L1ZhcmVsYVJvdW5kLVJlZ3VsYXIudHRmKTtcXG59XFxuXFxuOnJvb3Qge1xcbiAgICAtLWZvbnQtY29udGVudDogJ1ZhcmVsYSBSb3VuZCc7XFxufVxcblxcbioge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxufVxcblxcbmxpIHtcXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcXG59XFxuXFxuYm9keSxcXG5pbnB1dCxcXG5zZWxlY3QsXFxuYnV0dG9uIHtcXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtY29udGVudCk7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7XG5cbiAgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH1cblxuICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSB7XG5cdFx0XHR2YXIgaSA9IHNjcmlwdHMubGVuZ3RoIC0gMTtcblx0XHRcdHdoaWxlIChpID4gLTEgJiYgIXNjcmlwdFVybCkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3NpZGUtYmFyLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc2lkZS1iYXIuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImZ1bmN0aW9uIGNyZWF0ZVRleHQodGV4dCkge1xuICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgZGl2LnRleHRDb250ZW50ID0gdGV4dDtcbiAgICByZXR1cm4gZGl2O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVJbWcoc3JjLCBhbHQpIHtcbiAgICBjb25zdCBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgIGltZy5zcmMgPSBzcmM7XG4gICAgaW1nLmFsdCA9IGFsdDtcbiAgICByZXR1cm4gaW1nO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVFbXB0eURpdklkKHRleHQpIHtcbiAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGRpdi5pZCA9IHRleHQ7XG4gICAgcmV0dXJuIGRpdjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlRW1wdHlEaXZDbGFzcyh0ZXh0KSB7XG4gICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBkaXYuY2xhc3NMaXN0LmFkZCh0ZXh0KTtcbiAgICByZXR1cm4gZGl2O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVJbnB1dFdpdGhMYWJlbCh0ZXh0LCB0eXBlLCAuLi5hcmcpIHtcbiAgICBjb25zdCBsYWJlbCA9IGNyZWF0ZUxhYmVsKHRleHQpO1xuICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgIGlucHV0LnR5cGUgPSB0eXBlO1xuICAgIGlucHV0LmlkID0gY3JlYXRlSW5wdXRJZCh0ZXh0KTtcbiAgICBpbnB1dC5uYW1lID0gaW5wdXQuaWQ7XG4gICAgaW5wdXQucmVxdWlyZWQgPSB0cnVlO1xuICAgIGlmIChbLi4uYXJnXVswXSA9PT0gXCJmaXJzdFwiKSBpbnB1dC5hdXRvZm9jdXMgPSBcIm9uXCI7XG4gICAgY29uc3QgZGl2ID0gY3JlYXRlRW1wdHlEaXZDbGFzcyhcImlucHV0XCIpO1xuICAgIGRpdi5hcHBlbmQobGFiZWwsIGlucHV0KTtcbiAgICByZXR1cm4gZGl2O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVTZWxlY3RXaXRoTGFiZWwodGV4dCwgb3B0aW9uKSB7XG4gICAgY29uc3QgbGFiZWwgPSBjcmVhdGVMYWJlbCh0ZXh0KTtcbiAgICBjb25zdCBzZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpO1xuICAgIHNlbGVjdC5pZCA9IHRleHQudG9Mb3dlckNhc2UoKTtcbiAgICBzZWxlY3QubmFtZSA9IHNlbGVjdC5pZDtcbiAgICBzZWxlY3QucmVxdWlyZWQgPSB0cnVlO1xuICAgIGZvciAoY29uc3QgaXRlbSBvZiBvcHRpb24pIHNlbGVjdC5hZGQobmV3IE9wdGlvbihpdGVtLCBpdGVtLnRvTG93ZXJDYXNlKCkpLCB1bmRlZmluZWQpO1xuICAgIGNvbnN0IGRpdiA9IGNyZWF0ZUVtcHR5RGl2Q2xhc3MoXCJzZWxlY3RcIik7XG4gICAgZGl2LmFwcGVuZChsYWJlbCwgc2VsZWN0KTtcbiAgICByZXR1cm4gZGl2O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMYWJlbCh0ZXh0KSB7XG4gICAgY29uc3QgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gICAgbGFiZWwudGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgIGxhYmVsLmh0bWxGb3IgPSBjcmVhdGVJbnB1dElkKHRleHQpO1xuICAgIHJldHVybiBsYWJlbDtcbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZUJ1dHRvbih0ZXh0LCBpZCkge1xuICAgIGNvbnN0IGJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgYnRuLnRleHRDb250ZW50ID0gdGV4dDtcbiAgICBidG4uaWQgPSBpZDtcbiAgICByZXR1cm4gYnRuO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVJbnB1dElkKHRleHQpIHtcbiAgICBsZXQgaWQgPSBcIlwiO1xuICAgIGlmICh0ZXh0LnNwbGl0KFwiIFwiKS5sZW5ndGggPiAxKSBpZCA9IHRleHQudG9Mb3dlckNhc2UoKS5zcGxpdChcIiBcIikuam9pbihcIi1cIik7XG4gICAgZWxzZSBpZCA9IHRleHQudG9Mb3dlckNhc2UoKTtcbiAgICByZXR1cm4gaWQ7XG59XG5cbmZ1bmN0aW9uIGdldFRvZGF5RGF0ZSgpIHtcbiAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcbiAgICBjb25zdCBtb250aExpc3QgPSBbXCJKYW51YXJ5XCIsIFwiRmVicnVhcnlcIiwgXCJNYXJjaFwiLCBcIkFwcmlsXCIsIFwiTWF5XCIsIFwiSnVuZVwiLFxuICAgICAgICBcIkp1bHlcIiwgXCJBdWd1c3RcIiwgXCJTZXB0ZW1iZXJcIiwgXCJPY3RvYmVyXCIsIFwiTm92ZW1iZXJcIiwgXCJEZWNlbWJlclwiXTtcbiAgICBcbiAgICBjb25zdCBkYXkgPSBkYXRlLmdldERhdGUoKTtcbiAgICBjb25zdCBtb250aCA9IG1vbnRoTGlzdFtkYXRlLmdldE1vbnRoKCldLnRvVXBwZXJDYXNlKCk7XG4gICAgY29uc3QgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTtcbiAgICByZXR1cm4gYCR7ZGF5fSAke21vbnRofSAke3llYXJ9YDtcbn1cblxuZXhwb3J0IHsgY3JlYXRlVGV4dCwgY3JlYXRlSW1nLCBjcmVhdGVFbXB0eURpdklkLCBjcmVhdGVFbXB0eURpdkNsYXNzLCBcbiAgICBjcmVhdGVJbnB1dFdpdGhMYWJlbCwgY3JlYXRlU2VsZWN0V2l0aExhYmVsLCBjcmVhdGVCdXR0b24gfVxuIiwiaW1wb3J0IHsgY3JlYXRlRW1wdHlEaXZJZCwgY3JlYXRlSW1nLCBjcmVhdGVUZXh0IH0gZnJvbSBcIi4vZnVuY3Rpb25cIjtcblxuaW1wb3J0IGljb25Ub2RvIGZyb20gJy4uL2ltZy9wbGF5bGlzdC1jaGVjay1jdXN0b20ucG5nJztcbmltcG9ydCBpY29uVG9kYXkgZnJvbSAnLi4vaW1nL2NhbGVuZGFyLWJsYW5rLWN1c3RvbS5wbmcnO1xuaW1wb3J0IGljb25VcGNvbWluZyBmcm9tICcuLi9pbWcvY2FsZW5kYXItbXVsdGlzZWxlY3QtY3VzdG9tLnBuZyc7XG5pbXBvcnQgaWNvblByb2plY3QgZnJvbSAnLi4vaW1nL2Jvb2stbXVsdGlwbGUtb3V0bGluZS1jdXN0b20ucG5nJztcblxuY29uc3Qgc2lkZUJhciA9ICgoKSA9PiB7XG4gICAgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgICAgY29uc3QgYnJhbmQgPSBjcmVhdGVCcmFuZCgpO1xuICAgICAgICBjb25zdCB1c2VyID0gY3JlYXRlUHJvZmlsZSgpO1xuICAgICAgICBjb25zdCBtZW51ID0gY3JlYXRlTWVudShnZXRNZW51TGlzdCgpKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGRpdiA9IGNyZWF0ZUVtcHR5RGl2SWQoXCJzaWRlLWJhclwiKTtcbiAgICAgICAgZGl2LmFwcGVuZChicmFuZCwgdXNlciwgbWVudSk7XG4gICAgICAgIHJldHVybiBkaXY7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0TWVudUxpc3QoKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBuZXcgTWVudUl0ZW0oXCJUb2RheVwiLCBpY29uVG9kYXksIFwiQ2FsZW5kYXIgSWNvblwiKSxcbiAgICAgICAgICAgIG5ldyBNZW51SXRlbShcIlVwY29taW5nXCIsIGljb25VcGNvbWluZywgXCJDYWxlbmRhciB3aXRoIERvdHMgSWNvblwiKSxcbiAgICAgICAgICAgIG5ldyBNZW51SXRlbShcIk15IFByb2plY3RzXCIsIGljb25Qcm9qZWN0LCBcIk11bHRpcGxlIEJvb2sgSWNvblwiKSxcbiAgICAgICAgXTtcbiAgICB9XG5cbiAgICBjbGFzcyBNZW51SXRlbSB7XG4gICAgICAgIGNvbnN0cnVjdG9yIChuYW1lLCBzcmMsIGFsdCkge1xuICAgICAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgICAgIHRoaXMuc3JjID0gc3JjO1xuICAgICAgICAgICAgdGhpcy5hbHQgPSBhbHQ7XG4gICAgICAgIH1cblxuICAgICAgICBnZXRJZCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5hbWUudG9Mb3dlckNhc2UoKS5zcGxpdChcIiBcIikuam9pbihcIi1cIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgZnVuY3Rpb24gY3JlYXRlQnJhbmQoKSB7XG4gICAgICAgIGNvbnN0IGljb24gPSBjcmVhdGVJbWcoaWNvblRvZG8sIFwiVG9kbyBJY29uXCIpO1xuICAgICAgICBjb25zdCBuYW1lID0gY3JlYXRlVGV4dChcInRvZG8gbGlzdFwiKTtcbiAgICAgICAgY29uc3QgZGl2ID0gY3JlYXRlRW1wdHlEaXZJZChcImJyYW5kXCIpO1xuICAgICAgICBkaXYuYXBwZW5kKGljb24sIG5hbWUpO1xuICAgICAgICByZXR1cm4gZGl2O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZVByb2ZpbGUoKSB7XG4gICAgICAgIGNvbnN0IGltZyA9IGNyZWF0ZUltZyhcIlwiLCBcIlwiKTtcbiAgICAgICAgY29uc3QgbmFtZSA9IGNyZWF0ZVRleHQoXCJcIik7XG4gICAgICAgIGNvbnN0IGRpdiA9IGNyZWF0ZUVtcHR5RGl2SWQoXCJwcm9maWxlXCIpO1xuICAgICAgICBkaXYuYXBwZW5kKGltZywgbmFtZSk7XG4gICAgICAgIHJldHVybiBkaXY7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY3JlYXRlTWVudShsaXN0KSB7XG4gICAgICAgIGNvbnN0IHVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInVsXCIpO1xuICAgICAgICB1bC5pZCA9IFwibWVudVwiO1xuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgbGlzdCkge1xuICAgICAgICAgICAgY29uc3QgbGkgPSBjcmVhdGVNZW51SXRlbShpdGVtKTtcbiAgICAgICAgICAgIHVsLmFwcGVuZChsaSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVsO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZU1lbnVJdGVtKGl0ZW0pIHtcbiAgICAgICAgY29uc3QgaW1nID0gY3JlYXRlSW1nKGl0ZW0uc3JjLCBpdGVtLmFsdCk7XG4gICAgICAgIGNvbnN0IGRpdiA9IGNyZWF0ZVRleHQoaXRlbS5uYW1lKTtcbiAgICAgICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gICAgICAgIGxpLmFwcGVuZChpbWcsIGRpdik7XG4gICAgICAgIGxpLmlkID0gaXRlbS5nZXRJZCgpO1xuICAgICAgICByZXR1cm4gbGk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgaW5pdCB9XG59KSgpXG5cbmV4cG9ydCB7IHNpZGVCYXIgfVxuIiwiaW1wb3J0IHsgY3JlYXRlQnV0dG9uLCBjcmVhdGVFbXB0eURpdkNsYXNzLCBjcmVhdGVFbXB0eURpdklkLCBjcmVhdGVJbnB1dFdpdGhMYWJlbCwgXG4gICAgY3JlYXRlU2VsZWN0V2l0aExhYmVsLCBjcmVhdGVUZXh0IH0gZnJvbSAnLi9mdW5jdGlvbic7XG5cbmNvbnN0IG1haW4gPSAoKCkgPT4ge1xuICAgIGxldCB0aXRsZSA9IG51bGw7XG4gICAgbGV0IG1haW5Db250ZW50ID0gbnVsbDtcbiAgICBjb25zdCBwcmlvcml0eSA9IFtcIkxvd1wiLCBcIk1lZGl1bVwiLCBcIkhpZ2hcIl07XG5cbiAgICBmdW5jdGlvbiBpbml0KCkge1xuICAgICAgICB0aXRsZSA9IGNyZWF0ZUVtcHR5RGl2SWQoXCJ0aXRsZVwiKTtcbiAgICAgICAgbWFpbkNvbnRlbnQgPSBjcmVhdGVFbXB0eURpdklkKFwibWFpbi1jb250ZW50XCIpO1xuICAgICAgICBjb25zdCBkaWFsb2dBZGRUYXNrID0gY3JlYXRlRGlhbG9nQWRkVGFzaygpO1xuICAgICAgICBjb25zdCBkaXYgPSBjcmVhdGVFbXB0eURpdklkKFwibWFpblwiKTtcbiAgICAgICAgZGl2LmFwcGVuZCh0aXRsZSwgbWFpbkNvbnRlbnQsIGRpYWxvZ0FkZFRhc2spO1xuICAgICAgICByZXR1cm4gZGl2O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZURpYWxvZ0FkZFRhc2soKSB7XG4gICAgICAgIGNvbnN0IGlucHV0RGVzYyA9IGNyZWF0ZUlucHV0V2l0aExhYmVsKFwiRGVzY3JpcHRpb25cIiwgXCJ0ZXh0XCIsIFwiZmlyc3RcIik7XG4gICAgICAgIGNvbnN0IGlucHV0RHVlRGF0ZSA9IGNyZWF0ZUlucHV0V2l0aExhYmVsKFwiRHVlIERhdGVcIiwgXCJkYXRlXCIpO1xuICAgICAgICBjb25zdCBpbnB1dFByaW9yaXR5ID0gY3JlYXRlU2VsZWN0V2l0aExhYmVsKFwiUHJpb3JpdHlcIiwgcHJpb3JpdHkpO1xuICAgICAgICBjb25zdCBidG5BZGQgPSBjcmVhdGVCdXR0b24oXCJBZGRcIiwgXCJidG4tdGFzay1hZGRcIik7XG4gICAgICAgIGJ0bkFkZC50eXBlID0gXCJidXR0b25cIjtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKTtcbiAgICAgICAgZm9ybS5tZXRob2QgPSBcImRpYWxvZ1wiO1xuICAgICAgICBmb3JtLmlkID0gXCJmb3JtLWFkZC10YXNrXCI7XG4gICAgICAgIGZvcm0uYXBwZW5kKGlucHV0RGVzYywgaW5wdXREdWVEYXRlLCBpbnB1dFByaW9yaXR5LCBidG5BZGQpO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgdGV4dCA9IGNyZWF0ZVRleHQoXCJBZGQgYSBUYXNrXCIpO1xuICAgICAgICBjb25zdCBidG5DbG9zZSA9IGNyZWF0ZUJ1dHRvbihcIlhcIiwgXCJidG4tdGFzay1jbG9zZVwiKTtcbiAgICAgICAgY29uc3QgY2xvc2VXcmFwcGVyID0gY3JlYXRlRW1wdHlEaXZJZChcImNsb3NlLXdyYXBwZXJcIik7XG4gICAgICAgIGNsb3NlV3JhcHBlci5hcHBlbmQodGV4dCwgYnRuQ2xvc2UpO1xuXG4gICAgICAgIGNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaWFsb2dcIik7XG4gICAgICAgIGRpYWxvZy5pZCA9IFwiZGlhbG9nLWFkZC10YXNrXCI7XG4gICAgICAgIGRpYWxvZy5hcHBlbmQoY2xvc2VXcmFwcGVyLCBmb3JtKTtcbiAgICAgICAgcmV0dXJuIGRpYWxvZztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZW5kZXIoY2F0ZWdvcnksIHByb2ZpbGUpIHtcbiAgICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSBjYXRlZ29yeTtcbiAgICAgICAgbWFpbkNvbnRlbnQuY2xlYXIoKTtcbiAgICAgICAgY29uc3QgaW5mbyA9IGdldEluZm8oY2F0ZWdvcnksIHByb2ZpbGUpO1xuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgaW5mbykgbWFpbkNvbnRlbnQuYXBwZW5kKGl0ZW0pO1xuICAgIH1cblxuICAgIE9iamVjdC5wcm90b3R5cGUuY2xlYXIgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgd2hpbGUgKHRoaXMuY2hpbGRyZW4ubGVuZ3RoID4gMCkgdGhpcy5yZW1vdmVDaGlsZCh0aGlzLmxhc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0SW5mbyhjYXRlZ29yeSwgcHJvZmlsZSkge1xuICAgICAgICBzd2l0Y2goY2F0ZWdvcnkpIHtcbiAgICAgICAgICAgIGNhc2UgXCJUb2RheVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlVGV4dChcIjwvPlwiKV07XG4gICAgICAgICAgICBjYXNlIFwiVXBjb21pbmdcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZVRleHQoXCI8Lz5cIildO1xuICAgICAgICAgICAgY2FzZSBcIk15IFByb2plY3RzXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGdldFByb2plY3RzKHByb2ZpbGUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0UHJvamVjdHMocHJvZmlsZSkge1xuICAgICAgICBsZXQgbGlzdCA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IHByb2plY3Qgb2YgcHJvZmlsZS5wcm9qZWN0cykge1xuICAgICAgICAgICAgY29uc3QgZGl2UHJvamVjdCA9IGNyZWF0ZVByb2plY3QocHJvamVjdC50aXRsZSk7XG4gICAgICAgICAgICBjb25zdCBkaXZUYXNrcyA9IGNyZWF0ZUVtcHR5RGl2Q2xhc3MoXCJwcm9qZWN0LXRhc2tcIik7XG4gICAgICAgICAgICBpZiAocHJvamVjdC50YXNrcy5sZW5ndGggPT09IDApIGRpdlRhc2tzLmFwcGVuZChjcmVhdGVUZXh0KFwiTm8gdGFzayBmb3VuZC5cIikpO1xuICAgICAgICAgICAgZWxzZSBmb3IgKGNvbnN0IHRhc2sgb2YgcHJvamVjdC50YXNrcykgZGl2VGFza3MuYXBwZW5kKGNyZWF0ZVRhc2sodGFzaykpO1xuICAgICAgICAgICAgZGl2UHJvamVjdC5hcHBlbmQoZGl2VGFza3MsIGNyZWF0ZUFkZFRhc2socHJvamVjdC5pZCkpO1xuICAgICAgICAgICAgbGlzdC5wdXNoKGRpdlByb2plY3QpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsaXN0O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZVByb2plY3QodGl0bGUpIHtcbiAgICAgICAgY29uc3QgZGl2VGl0bGUgPSBjcmVhdGVFbXB0eURpdkNsYXNzKFwicHJvamVjdC10aXRsZVwiKTtcbiAgICAgICAgZGl2VGl0bGUudGV4dENvbnRlbnQgPSB0aXRsZTtcbiAgICAgICAgY29uc3QgZGl2aWRlciA9IGNyZWF0ZUVtcHR5RGl2Q2xhc3MoXCJkaXZpZGVyXCIpO1xuICAgICAgICBjb25zdCBkaXYgPSBjcmVhdGVFbXB0eURpdkNsYXNzKFwicHJvamVjdFwiKTtcbiAgICAgICAgZGl2LmFwcGVuZChkaXZUaXRsZSwgZGl2aWRlcik7XG4gICAgICAgIHJldHVybiBkaXY7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY3JlYXRlVGFzayh0YXNrKSB7XG4gICAgICAgIGNvbnN0IGRlc2MgPSBjcmVhdGVFbXB0eURpdkNsYXNzKFwiZGVzY1wiKTtcbiAgICAgICAgZGVzYy50ZXh0Q29udGVudCA9IHRhc2suZGVzY3JpcHRpb247XG4gICAgICAgIGNvbnN0IGR1ZURhdGUgPSBjcmVhdGVFbXB0eURpdkNsYXNzKFwiZHVlLWRhdGVcIik7XG4gICAgICAgIGR1ZURhdGUudGV4dENvbnRlbnQgPSB0YXNrLmR1ZURhdGU7XG4gICAgICAgIGNvbnN0IGRpdlRhc2sgPSBjcmVhdGVFbXB0eURpdkNsYXNzKFwidGFza1wiKTtcbiAgICAgICAgZGl2VGFzay5hcHBlbmQoZGVzYywgZHVlRGF0ZSk7XG4gICAgICAgIGRpdlRhc2suY2xhc3NMaXN0LmFkZChnZXRQcmlvcml0eUNsYXNzKHRhc2sucHJpb3JpdHkpKTtcbiAgICAgICAgZGl2VGFzay5pZCA9IGB0LSR7dGFzay5pZH1gO1xuICAgICAgICByZXR1cm4gZGl2VGFzaztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRQcmlvcml0eUNsYXNzKHByaW9yaXR5KSB7XG4gICAgICAgIHJldHVybiBwcmlvcml0eS50b0xvd2VyQ2FzZSgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZUFkZFRhc2soaWQpIHtcbiAgICAgICAgY29uc3QgYnV0dG9uID0gY3JlYXRlQnV0dG9uKFwiKyBBZGQgVGFza1wiLCBgcC0ke2lkfWApO1xuICAgICAgICBidXR0b24uY2xhc3NMaXN0LmFkZCAoXCJhZGQtdGFza1wiKTtcbiAgICAgICAgY29uc3QgZGl2ID0gY3JlYXRlRW1wdHlEaXZDbGFzcyhcImFkZC10YXNrLXdyYXBwZXJcIik7XG4gICAgICAgIGRpdi5hcHBlbmQoYnV0dG9uKTtcbiAgICAgICAgcmV0dXJuIGRpdjtcbiAgICB9XG5cbiAgICByZXR1cm4geyBpbml0LCByZW5kZXIgfVxufSkoKVxuXG5leHBvcnQgeyBtYWluIH1cbiIsImltcG9ydCBpY29uVXNlciBmcm9tICcuLi9pbWcvdG9wZ3VudG9jYXQucG5nJztcblxuY29uc3QgdXNlciA9ICgoKSA9PiB7XG4gICAgbGV0IHVzZXIgPSBudWxsO1xuXG4gICAgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgICAgdXNlciA9IHJlZ2lzdGVyVXNlcigpO1xuICAgICAgICByZXR1cm4gdXNlcjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZWZyZXNoKCkge1xuICAgICAgICBjb25zb2xlLmxvZyh1c2VyKVxuICAgICAgICByZXR1cm4gdXNlcjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBhZGROZXdUYXNrKGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSwgcHJvamVjdElkKSB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gdXNlci5wcm9qZWN0cy5maW5kSW5kZXgocHJvamVjdCA9PiBwcm9qZWN0LmlkID09PSBwYXJzZUludChwcm9qZWN0SWQuc3BsaXQoXCItXCIpWzFdKSk7XG4gICAgICAgIGNvbnN0IHRhc2sgPSBuZXcgVGFzayhkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHksIHVzZXIucHJvamVjdHNbaW5kZXhdLnRhc2tzKTtcbiAgICAgICAgdXNlci5wcm9qZWN0c1tpbmRleF0uYWRkVGFzayh0YXNrKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZWdpc3RlclVzZXIoKSB7XG4gICAgICAgIGxldCBuYW1lID0gXCJKb2huXCI7XG4gICAgICAgIC8vIHdoaWxlIChuYW1lID09PSBcIlwiKSBuYW1lID0gcHJvbXB0KFwiV2VsY29tZSwgd2hhdCBpcyB5b3VyIG5hbWU/XCIpO1xuICAgICAgICByZXR1cm4gY3JlYXRlVXNlcihuYW1lKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVVc2VyKG5hbWUpIHtcbiAgICAgICAgY29uc3QgdXNlciA9IG5ldyBVc2VyKG5hbWUpO1xuICAgICAgICB1c2VyLmljb24uc3JjID0gaWNvblVzZXI7XG4gICAgICAgIHVzZXIuaWNvbi5hbHQgPSBcIlRvcGd1bnRvY2F0XCI7XG4gICAgICAgIGNvbnN0IHByb2plY3QgPSBuZXcgUHJvamVjdChcIkRlZmF1bHRcIiwgdXNlci5wcm9qZWN0cyk7XG4gICAgICAgIHVzZXIuYWRkUHJvamVjdChwcm9qZWN0KTtcbiAgICAgICAgcmV0dXJuIHVzZXI7XG4gICAgfVxuXG4gICAgY2xhc3MgVXNlciB7XG4gICAgICAgIGNvbnN0cnVjdG9yKG5hbWUpIHtcbiAgICAgICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgaWNvbiA9IHtcbiAgICAgICAgICAgIHNyYzogbnVsbCxcbiAgICAgICAgICAgIGFsdDogbnVsbCxcbiAgICAgICAgfTtcbiAgICAgICAgcHJvamVjdHMgPSBbXTtcbiAgICAgICAgYWRkUHJvamVjdChwcm9qZWN0KSB7XG4gICAgICAgICAgICB0aGlzLnByb2plY3RzLnB1c2gocHJvamVjdCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgY2xhc3MgUHJvamVjdCB7XG4gICAgICAgIGNvbnN0cnVjdG9yKHRpdGxlLCBsaXN0KSB7XG4gICAgICAgICAgICB0aGlzLnRpdGxlID0gdGl0bGU7XG4gICAgICAgICAgICB0aGlzLmlkID0gZ2VuZXJhdGVJZChsaXN0KTtcbiAgICAgICAgfVxuICAgICAgICB0YXNrcyA9IFtdO1xuICAgICAgICBhZGRUYXNrKHRhc2spIHtcbiAgICAgICAgICAgIHRoaXMudGFza3MucHVzaCh0YXNrKTtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAvLyBPcHRpb25hbFxuICAgICAgICBub3RlcztcbiAgICAgICAgY2hlY2tsaXN0O1xuICAgIH1cbiAgICBcbiAgICBjbGFzcyBUYXNrIHtcbiAgICAgICAgY29uc3RydWN0b3IoZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LCBsaXN0KSB7XG4gICAgICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgICAgICAgICB0aGlzLmR1ZURhdGUgPSBkdWVEYXRlO1xuICAgICAgICAgICAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5O1xuICAgICAgICAgICAgdGhpcy5pZCA9IGdlbmVyYXRlSWQobGlzdCk7XG4gICAgICAgIH1cbiAgICAgICAgc3RhdHVzID0gZmFsc2U7XG4gICAgfVxuICAgIFxuICAgIGZ1bmN0aW9uIGdlbmVyYXRlSWQobGlzdCkge1xuICAgICAgICBpZiAobGlzdC5sZW5ndGggPT09IDApIHJldHVybiAxO1xuICAgICAgICBsZXQgaWRMaXN0ID0gW107XG4gICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBsaXN0KSBpZExpc3QucHVzaChpdGVtLmlkKTtcbiAgICAgICAgcmV0dXJuIE1hdGgubWF4KC4uLmlkTGlzdCkgKyAxO1xuICAgIH1cblxuICAgIHJldHVybiB7IGluaXQsIHJlZnJlc2gsIGFkZE5ld1Rhc2sgfTtcbn0pKClcblxuZXhwb3J0IHsgdXNlciB9XG4iLCJpbXBvcnQgJy4vY3NzL3N0eWxlLmNzcyc7XG5pbXBvcnQgJy4vY3NzL3NpZGUtYmFyLmNzcyc7XG5pbXBvcnQgJy4vY3NzL21haW4uY3NzJztcblxuaW1wb3J0IHsgc2lkZUJhciB9IGZyb20gJy4vanMvc2lkZS1iYXInO1xuaW1wb3J0IHsgbWFpbiB9IGZyb20gJy4vanMvbWFpbic7XG5pbXBvcnQgeyB1c2VyIH0gZnJvbSAnLi9qcy91c2VyJztcblxuY29uc3QgcGFnZSA9ICgoKSA9PiB7XG4gICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY29udGVudFwiKTtcbiAgICBsZXQgcHJvZmlsZSA9IG51bGw7XG4gICAgbGV0IGxpQWN0aXZlID0gbnVsbDtcbiAgICBsZXQgZGlhbG9nQWRkVGFzayA9IG51bGw7XG4gICAgbGV0IGJ0bkFkZFRhc2tzID0gbnVsbDtcbiAgICBsZXQgcHJvamVjdElkID0gbnVsbDtcblxuICAgIGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICAgIGRvY3VtZW50LnRpdGxlID0gXCJUb2RvIExpc3RcIjtcbiAgICAgICAgaW5pdExheW91dCgpO1xuICAgICAgICBpbml0UHJvZmlsZSgpO1xuICAgICAgICBzZXRNZW51SWREZWZhdWx0KFwidG9kYXlcIik7XG5cbiAgICAgICAgLy8gRXZlbnQgU0lERSBCQVJcbiAgICAgICAgY29uc3QgbGlNZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIiNtZW51ID4gbGlcIik7XG4gICAgICAgIGxpTWVudS5mb3JFYWNoKGxpID0+IHtcbiAgICAgICAgICAgIGxpLm9uY2xpY2sgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgdG9nZ2xlQW5kUmVuZGVyKGUudGFyZ2V0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gRXZlbnQgRElBTE9HIENMT1NFXG4gICAgICAgIGNvbnN0IGJ0blRhc2tDbG9zZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYnRuLXRhc2stY2xvc2VcIik7XG4gICAgICAgIGRpYWxvZ0FkZFRhc2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RpYWxvZy1hZGQtdGFza1wiKTtcbiAgICAgICAgY29uc3QgZm9ybVRhc2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvcm0tYWRkLXRhc2tcIik7XG5cbiAgICAgICAgYnRuVGFza0Nsb3NlLm9uY2xpY2sgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGRpYWxvZ0FkZFRhc2suY2xvc2UoKTtcbiAgICAgICAgICAgIGZvcm1UYXNrLnJlc2V0KCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBFdmVudCBUQVNLIEFERFxuICAgICAgICBjb25zdCBidG5BZGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2J0bi10YXNrLWFkZFwiKTtcbiAgICAgICAgY29uc3QgaW5wdXREZXNjID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkZXNjcmlwdGlvblwiKTtcbiAgICAgICAgY29uc3QgaW5wdXREdWVEYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkdWUtZGF0ZVwiKTtcbiAgICAgICAgY29uc3Qgc2VsZWN0UHJpb3JpdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3ByaW9yaXR5XCIpO1xuXG4gICAgICAgIGJ0bkFkZC5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB1c2VyLmFkZE5ld1Rhc2soaW5wdXREZXNjLnZhbHVlLCBpbnB1dER1ZURhdGUudmFsdWUsIHNlbGVjdFByaW9yaXR5LnZhbHVlLCBwcm9qZWN0SWQpO1xuICAgICAgICAgICAgZGlhbG9nQWRkVGFzay5jbG9zZSgpO1xuICAgICAgICAgICAgZm9ybVRhc2sucmVzZXQoKTtcbiAgICAgICAgICAgIHByb2ZpbGUgPSB1c2VyLnJlZnJlc2goKTtcbiAgICAgICAgICAgIHJlbmRlckFuZFJlZnJlc2goKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluaXRMYXlvdXQoKSB7XG4gICAgICAgIGNvbnRlbnQuYXBwZW5kKHNpZGVCYXIuaW5pdCgpLCBtYWluLmluaXQoKSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5pdFByb2ZpbGUoKSB7XG4gICAgICAgIHByb2ZpbGUgPSB1c2VyLmluaXQoKTtcbiAgICAgICAgY29uc3QgZGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlXCIpO1xuICAgICAgICBjb25zdCBpbWcgPSBkaXYucXVlcnlTZWxlY3RvcihcImltZ1wiKTtcbiAgICAgICAgY29uc3QgbmFtZSA9IGRpdi5xdWVyeVNlbGVjdG9yKFwiZGl2XCIpO1xuICAgICAgICBpbWcuc3JjID0gcHJvZmlsZS5pY29uLnNyYztcbiAgICAgICAgaW1nLmFsdCA9IHByb2ZpbGUuaWNvbi5hbHQ7XG4gICAgICAgIG5hbWUudGV4dENvbnRlbnQgPSBwcm9maWxlLm5hbWU7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0TWVudUlkRGVmYXVsdCh0ZXh0KSB7XG4gICAgICAgIGNvbnN0IGxpID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7dGV4dH1gKTtcbiAgICAgICAgdG9nZ2xlQW5kUmVuZGVyKGxpKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0b2dnbGVBbmRSZW5kZXIodGFyZ2V0KSB7XG4gICAgICAgIHRvZ2dsZUNsYXNzKHRhcmdldCwgXCJhY3RpdmVcIik7XG4gICAgICAgIHJlbmRlckFuZFJlZnJlc2goKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0b2dnbGVDbGFzcyh0YXJnZXQsIGNsYXNzTmFtZSkge1xuICAgICAgICBpZiAobGlBY3RpdmUgIT09IG51bGwpIGxpQWN0aXZlLmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NOYW1lKTtcbiAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKTtcbiAgICAgICAgbGlBY3RpdmUgPSB0YXJnZXQ7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVuZGVyQW5kUmVmcmVzaCgpIHtcbiAgICAgICAgbWFpbi5yZW5kZXIobGlBY3RpdmUudGV4dENvbnRlbnQsIHByb2ZpbGUpO1xuICAgICAgICByZWZyZXNoQWRkVGFzaygpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlZnJlc2hBZGRUYXNrKCkge1xuICAgICAgICBidG5BZGRUYXNrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuYWRkLXRhc2tcIik7XG4gICAgICAgIGJ0bkFkZFRhc2tzLmZvckVhY2goYnRuID0+IHtcbiAgICAgICAgICAgIGJ0bi5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgZGlhbG9nQWRkVGFzay5zaG93TW9kYWwoKTtcbiAgICAgICAgICAgICAgICBwcm9qZWN0SWQgPSBidG4uaWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB7IGluaXQgfVxufSkoKVxuXG5wYWdlLmluaXQoKTtcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIiwiVVJMIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJuIiwiZ2V0dGVyIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJocmVmIiwibmMiLCJsb2NhbHMiLCJjcmVhdGVUZXh0IiwidGV4dCIsImRpdiIsInRleHRDb250ZW50IiwiY3JlYXRlSW1nIiwiYWx0IiwiaW1nIiwiY3JlYXRlRW1wdHlEaXZJZCIsImNyZWF0ZUVtcHR5RGl2Q2xhc3MiLCJjbGFzc0xpc3QiLCJhZGQiLCJjcmVhdGVJbnB1dFdpdGhMYWJlbCIsInR5cGUiLCJhcmciLCJsYWJlbCIsImNyZWF0ZUxhYmVsIiwiaW5wdXQiLCJjcmVhdGVJbnB1dElkIiwibmFtZSIsInJlcXVpcmVkIiwiYXV0b2ZvY3VzIiwiYXBwZW5kIiwiaHRtbEZvciIsImNyZWF0ZUJ1dHRvbiIsImJ0biIsInNwbGl0IiwidG9Mb3dlckNhc2UiLCJzaWRlQmFyIiwiTWVudUl0ZW0iLCJjb25zdHJ1Y3RvciIsImdldElkIiwiY3JlYXRlTWVudUl0ZW0iLCJsaSIsImluaXQiLCJicmFuZCIsImljb24iLCJjcmVhdGVCcmFuZCIsInVzZXIiLCJjcmVhdGVQcm9maWxlIiwibWVudSIsInVsIiwiY3JlYXRlTWVudSIsInRpdGxlIiwibWFpbkNvbnRlbnQiLCJwcmlvcml0eSIsImNyZWF0ZVByb2plY3QiLCJkaXZUaXRsZSIsImRpdmlkZXIiLCJjcmVhdGVUYXNrIiwidGFzayIsImRlc2MiLCJkZXNjcmlwdGlvbiIsImR1ZURhdGUiLCJkaXZUYXNrIiwiZ2V0UHJpb3JpdHlDbGFzcyIsImNyZWF0ZUFkZFRhc2siLCJidXR0b24iLCJjbGVhciIsImNoaWxkcmVuIiwibGFzdENoaWxkIiwiZGlhbG9nQWRkVGFzayIsImlucHV0RGVzYyIsImlucHV0RHVlRGF0ZSIsImlucHV0UHJpb3JpdHkiLCJvcHRpb24iLCJzZWxlY3QiLCJPcHRpb24iLCJjcmVhdGVTZWxlY3RXaXRoTGFiZWwiLCJidG5BZGQiLCJmb3JtIiwibWV0aG9kIiwiYnRuQ2xvc2UiLCJjbG9zZVdyYXBwZXIiLCJkaWFsb2ciLCJjcmVhdGVEaWFsb2dBZGRUYXNrIiwicmVuZGVyIiwiY2F0ZWdvcnkiLCJwcm9maWxlIiwiaW5mbyIsInByb2plY3QiLCJwcm9qZWN0cyIsImRpdlByb2plY3QiLCJkaXZUYXNrcyIsInRhc2tzIiwiZ2V0UHJvamVjdHMiLCJnZXRJbmZvIiwiVXNlciIsImFkZFByb2plY3QiLCJQcm9qZWN0IiwiZ2VuZXJhdGVJZCIsImFkZFRhc2siLCJub3RlcyIsImNoZWNrbGlzdCIsIlRhc2siLCJzdGF0dXMiLCJpZExpc3QiLCJNYXRoIiwibWF4IiwiY3JlYXRlVXNlciIsInJlZnJlc2giLCJjb25zb2xlIiwibG9nIiwiYWRkTmV3VGFzayIsInByb2plY3RJZCIsImZpbmRJbmRleCIsInBhcnNlSW50IiwibGlBY3RpdmUiLCJidG5BZGRUYXNrcyIsInRvZ2dsZUFuZFJlbmRlciIsImNsYXNzTmFtZSIsInRvZ2dsZUNsYXNzIiwicmVuZGVyQW5kUmVmcmVzaCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwib25jbGljayIsInNob3dNb2RhbCIsImluaXRQcm9maWxlIiwiYnRuVGFza0Nsb3NlIiwiZm9ybVRhc2siLCJjbG9zZSIsInJlc2V0Iiwic2VsZWN0UHJpb3JpdHkiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=