(()=>{"use strict";var n={556:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),a=t(645),A=t.n(a)()(r());A.push([n.id,":root {\n    --color-main: #f0f9ff;\n    --red: #ef4444;\n    --yellow: #eab308;\n    --green: #22c55e;\n}\n\n#main {\n    box-sizing: border-box;\n    min-height: 100vh;\n    margin-left: var(--width-side-bar);\n    padding: 50px 100px;\n\n    background-color: var(--color-main);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.title {\n    font-size: 18px;\n}\n\n#main-content {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.project {\n    background-color: var(--color-side-bar);\n    border-radius: 10px;\n    padding: 20px 40px;\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.divider {\n    width: 100%;\n    border-bottom: 1px solid grey;\n}\n\n.project-task {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n/* TASK */\n.task {\n    background-color: var(--color-main);\n    border-radius: 5px;\n    padding: 10px 20px;\n\n    border-top: 1px solid var(--color-main);\n    border-right: 1px solid var(--color-main);\n    border-bottom: 1px solid var(--color-main);\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 1rem;\n}\n\n.task:hover {\n    border-top: 1px solid var(--color-brand);\n    border-right: 1px solid var(--color-brand);\n    border-bottom: 1px solid var(--color-brand);\n}\n\n.high {\n    border-left: 5px solid var(--red);\n}\n\n.medium {\n    border-left: 5px solid var(--yellow);\n}\n\n.low {\n    border-left: 5px solid var(--green);\n}\n\n/* TASK INFO */\n.task-info {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\ninput.status {\n    transform: scale(1.2);\n}\n\n/* TASK END */\n.task-end {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.days-left,\n.due-date {\n    width: 14ch;\n}\n\n.overdue {\n    color: var(--red);\n}\n\n.hidden {\n    visibility: hidden;\n}\n\n.cross {\n    text-decoration: line-through;\n}\n\n.done {\n    color: var(--green);\n    font-style: italic;\n}\n\n.delete-task {\n    height: fit-content;\n    border: none;\n    background-color: transparent;\n}\n\n.delete-task > img {\n    height: 24px;\n    display: flex;\n}\n\n/* ADD TASK */\n.add-task-wrapper,\n.add-project-wrapper {\n    height: var(--height-add-task);\n}\n\n.add-task,\n#add-project {\n    height: 1.5rem;\n    background-color: transparent;\n    color: var(--color-brand);\n    border: none;\n    padding: 5px 10px;\n    font-size: 1rem;\n    font-style: italic;\n}\n\n.add-task:hover,\n#add-project:hover {\n    cursor: pointer;\n    font-weight: bold;\n}\n\n.add-task:active,\n#add-project:active {\n    font-size: calc(1rem - 1px);\n}\n\n/* DIALOG */\n::backdrop {\n    background-color: black;\n    opacity: 25%;\n}\n\ndialog {\n    border: none;\n    box-shadow: 0 0 10px var(--color-brand);\n    border-radius: 10px;\n    padding: 20px;\n\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\ndialog input,\ndialog select {\n    height: 2rem;\n    border-radius: 10px;\n    border: none;\n    outline: none;\n    background-color: var(--color-side-bar);\n    padding: 0 1rem;\n}\n\nform {\n    display: flex;\n    gap: 10px;\n}\n\n.input,\n.select {\n    display: flex;\n    flex-direction: column;\n}\n\n#btn-task-add,\n#btn-project-add {\n    height: 2rem;\n    width: 5rem;\n    font-size: 1rem;\n    margin-left: 1rem;\n\n    background-color: var(--color-brand);\n    color: white;\n    border: none;\n    border-radius: 1rem;\n\n    align-self: flex-end;\n}\n\n#btn-task-add:hover,\n#btn-project-add:hover {\n    box-shadow: 0 0 10px var(--color-brand);\n}\n\n.close-wrapper {\n    margin-bottom: 10px;\n    font-size: 18px;\n    display: flex;\n    justify-content: space-between;\n}\n\n#btn-task-close,\n#btn-project-close {\n    border: none;\n    background-color: transparent;\n    color: red;\n    font-size: 18px;\n}\n\n#btn-task-close:hover,\n#btn-project-close:hover {\n    text-shadow: 0 0 10px red;\n}\n\n#btn-task-close:active\n#btn-project-close:active {\n    text-shadow: 0 0 1px red;\n    font-size: 17px;\n}\n","",{version:3,sources:["webpack://./src/css/main.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,cAAc;IACd,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,iBAAiB;IACjB,kCAAkC;IAClC,mBAAmB;;IAEnB,mCAAmC;;IAEnC,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,uCAAuC;IACvC,mBAAmB;IACnB,kBAAkB;;IAElB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA,SAAS;AACT;IACI,mCAAmC;IACnC,kBAAkB;IAClB,kBAAkB;;IAElB,uCAAuC;IACvC,yCAAyC;IACzC,0CAA0C;;IAE1C,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,wCAAwC;IACxC,0CAA0C;IAC1C,2CAA2C;AAC/C;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,mCAAmC;AACvC;;AAEA,cAAc;AACd;IACI,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,qBAAqB;AACzB;;AAEA,aAAa;AACb;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;;IAEI,WAAW;AACf;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,6BAA6B;AACjC;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB;;AAEA,aAAa;AACb;;IAEI,8BAA8B;AAClC;;AAEA;;IAEI,cAAc;IACd,6BAA6B;IAC7B,yBAAyB;IACzB,YAAY;IACZ,iBAAiB;IACjB,eAAe;IACf,kBAAkB;AACtB;;AAEA;;IAEI,eAAe;IACf,iBAAiB;AACrB;;AAEA;;IAEI,2BAA2B;AAC/B;;AAEA,WAAW;AACX;IACI,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,uCAAuC;IACvC,mBAAmB;IACnB,aAAa;;IAEb,eAAe;IACf,QAAQ;IACR,SAAS;IACT,gCAAgC;AACpC;;AAEA;;IAEI,YAAY;IACZ,mBAAmB;IACnB,YAAY;IACZ,aAAa;IACb,uCAAuC;IACvC,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;;IAEI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;;IAEI,YAAY;IACZ,WAAW;IACX,eAAe;IACf,iBAAiB;;IAEjB,oCAAoC;IACpC,YAAY;IACZ,YAAY;IACZ,mBAAmB;;IAEnB,oBAAoB;AACxB;;AAEA;;IAEI,uCAAuC;AAC3C;;AAEA;IACI,mBAAmB;IACnB,eAAe;IACf,aAAa;IACb,8BAA8B;AAClC;;AAEA;;IAEI,YAAY;IACZ,6BAA6B;IAC7B,UAAU;IACV,eAAe;AACnB;;AAEA;;IAEI,yBAAyB;AAC7B;;AAEA;;IAEI,wBAAwB;IACxB,eAAe;AACnB",sourcesContent:[":root {\n    --color-main: #f0f9ff;\n    --red: #ef4444;\n    --yellow: #eab308;\n    --green: #22c55e;\n}\n\n#main {\n    box-sizing: border-box;\n    min-height: 100vh;\n    margin-left: var(--width-side-bar);\n    padding: 50px 100px;\n\n    background-color: var(--color-main);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.title {\n    font-size: 18px;\n}\n\n#main-content {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.project {\n    background-color: var(--color-side-bar);\n    border-radius: 10px;\n    padding: 20px 40px;\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.divider {\n    width: 100%;\n    border-bottom: 1px solid grey;\n}\n\n.project-task {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n/* TASK */\n.task {\n    background-color: var(--color-main);\n    border-radius: 5px;\n    padding: 10px 20px;\n\n    border-top: 1px solid var(--color-main);\n    border-right: 1px solid var(--color-main);\n    border-bottom: 1px solid var(--color-main);\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 1rem;\n}\n\n.task:hover {\n    border-top: 1px solid var(--color-brand);\n    border-right: 1px solid var(--color-brand);\n    border-bottom: 1px solid var(--color-brand);\n}\n\n.high {\n    border-left: 5px solid var(--red);\n}\n\n.medium {\n    border-left: 5px solid var(--yellow);\n}\n\n.low {\n    border-left: 5px solid var(--green);\n}\n\n/* TASK INFO */\n.task-info {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\ninput.status {\n    transform: scale(1.2);\n}\n\n/* TASK END */\n.task-end {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.days-left,\n.due-date {\n    width: 14ch;\n}\n\n.overdue {\n    color: var(--red);\n}\n\n.hidden {\n    visibility: hidden;\n}\n\n.cross {\n    text-decoration: line-through;\n}\n\n.done {\n    color: var(--green);\n    font-style: italic;\n}\n\n.delete-task {\n    height: fit-content;\n    border: none;\n    background-color: transparent;\n}\n\n.delete-task > img {\n    height: 24px;\n    display: flex;\n}\n\n/* ADD TASK */\n.add-task-wrapper,\n.add-project-wrapper {\n    height: var(--height-add-task);\n}\n\n.add-task,\n#add-project {\n    height: 1.5rem;\n    background-color: transparent;\n    color: var(--color-brand);\n    border: none;\n    padding: 5px 10px;\n    font-size: 1rem;\n    font-style: italic;\n}\n\n.add-task:hover,\n#add-project:hover {\n    cursor: pointer;\n    font-weight: bold;\n}\n\n.add-task:active,\n#add-project:active {\n    font-size: calc(1rem - 1px);\n}\n\n/* DIALOG */\n::backdrop {\n    background-color: black;\n    opacity: 25%;\n}\n\ndialog {\n    border: none;\n    box-shadow: 0 0 10px var(--color-brand);\n    border-radius: 10px;\n    padding: 20px;\n\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\ndialog input,\ndialog select {\n    height: 2rem;\n    border-radius: 10px;\n    border: none;\n    outline: none;\n    background-color: var(--color-side-bar);\n    padding: 0 1rem;\n}\n\nform {\n    display: flex;\n    gap: 10px;\n}\n\n.input,\n.select {\n    display: flex;\n    flex-direction: column;\n}\n\n#btn-task-add,\n#btn-project-add {\n    height: 2rem;\n    width: 5rem;\n    font-size: 1rem;\n    margin-left: 1rem;\n\n    background-color: var(--color-brand);\n    color: white;\n    border: none;\n    border-radius: 1rem;\n\n    align-self: flex-end;\n}\n\n#btn-task-add:hover,\n#btn-project-add:hover {\n    box-shadow: 0 0 10px var(--color-brand);\n}\n\n.close-wrapper {\n    margin-bottom: 10px;\n    font-size: 18px;\n    display: flex;\n    justify-content: space-between;\n}\n\n#btn-task-close,\n#btn-project-close {\n    border: none;\n    background-color: transparent;\n    color: red;\n    font-size: 18px;\n}\n\n#btn-task-close:hover,\n#btn-project-close:hover {\n    text-shadow: 0 0 10px red;\n}\n\n#btn-task-close:active\n#btn-project-close:active {\n    text-shadow: 0 0 1px red;\n    font-size: 17px;\n}\n"],sourceRoot:""}]);const i=A},8:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),a=t(645),A=t.n(a)()(r());A.push([n.id,":root {\n    --color-side-bar: #e0f2fe;\n    --color-brand: #0ea5e9;\n    --color-select: #bae6fd;\n    --width-side-bar: 20vw;\n}\n\n#side-bar {\n    box-sizing: border-box;\n    min-height: 100vh;\n    width: var(--width-side-bar);\n    padding: 20px;\n\n    background-color: var(--color-side-bar);\n    box-shadow: 0 0 10px grey;\n    z-index: 1;\n    \n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n\n    position: fixed;\n    top: 0;\n}\n\n#brand > img {\n    height: 48px;\n}\n\n#brand {\n    color: var(--color-brand);\n    font-size: 18px;\n    font-weight: bold;\n\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile {\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile > img {\n    background-color: white;\n    height: 48px;\n    border-radius: 24px;\n}\n\n#menu {\n    display: grid;\n    gap: 10px;\n}\n\n#menu > li {\n    height: 2rem;\n    border-radius: 10px;\n    padding-left: 1rem;\n\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n#menu > li > img {\n    height: 24px;\n}\n\n#menu > li:hover,\n#menu > li.active {\n    cursor: pointer;\n    background-color: var(--color-select);\n    color: var(--color-brand);\n    font-weight: bold;\n}\n\n#menu > li.active {\n    font-style: italic;\n}\n","",{version:3,sources:["webpack://./src/css/side-bar.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,sBAAsB;IACtB,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,sBAAsB;IACtB,iBAAiB;IACjB,4BAA4B;IAC5B,aAAa;;IAEb,uCAAuC;IACvC,yBAAyB;IACzB,UAAU;;IAEV,aAAa;IACb,sBAAsB;IACtB,SAAS;;IAET,eAAe;IACf,MAAM;AACV;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,eAAe;IACf,iBAAiB;;IAEjB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,uBAAuB;IACvB,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,mBAAmB;IACnB,kBAAkB;;IAElB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,YAAY;AAChB;;AAEA;;IAEI,eAAe;IACf,qCAAqC;IACrC,yBAAyB;IACzB,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:[":root {\n    --color-side-bar: #e0f2fe;\n    --color-brand: #0ea5e9;\n    --color-select: #bae6fd;\n    --width-side-bar: 20vw;\n}\n\n#side-bar {\n    box-sizing: border-box;\n    min-height: 100vh;\n    width: var(--width-side-bar);\n    padding: 20px;\n\n    background-color: var(--color-side-bar);\n    box-shadow: 0 0 10px grey;\n    z-index: 1;\n    \n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n\n    position: fixed;\n    top: 0;\n}\n\n#brand > img {\n    height: 48px;\n}\n\n#brand {\n    color: var(--color-brand);\n    font-size: 18px;\n    font-weight: bold;\n\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile {\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile > img {\n    background-color: white;\n    height: 48px;\n    border-radius: 24px;\n}\n\n#menu {\n    display: grid;\n    gap: 10px;\n}\n\n#menu > li {\n    height: 2rem;\n    border-radius: 10px;\n    padding-left: 1rem;\n\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n#menu > li > img {\n    height: 24px;\n}\n\n#menu > li:hover,\n#menu > li.active {\n    cursor: pointer;\n    background-color: var(--color-select);\n    color: var(--color-brand);\n    font-weight: bold;\n}\n\n#menu > li.active {\n    font-style: italic;\n}\n"],sourceRoot:""}]);const i=A},402:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(537),r=t.n(o),a=t(645),A=t.n(a),i=t(667),c=t.n(i),s=new URL(t(460),t.b),d=A()(r()),l=c()(s);d.push([n.id,`@font-face {\n    font-family: 'Varela Round';\n    src: url(${l});\n}\n\n:root {\n    --font-content: 'Varela Round';\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\nli {\n    list-style: none;\n}\n\nbody,\ninput,\nselect,\nbutton {\n    font-family: var(--font-content);\n}\n`,"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B,4CAAyC;AAC7C;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;;;IAII,gCAAgC;AACpC",sourcesContent:["@font-face {\n    font-family: 'Varela Round';\n    src: url(../font/VarelaRound-Regular.ttf);\n}\n\n:root {\n    --font-content: 'Varela Round';\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\nli {\n    list-style: none;\n}\n\nbody,\ninput,\nselect,\nbutton {\n    font-family: var(--font-content);\n}\n"],sourceRoot:""}]);const p=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(A[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);o&&A[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},A=[],i=0;i<n.length;i++){var c=n[i],s=o.base?c[0]+o.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=i,e.splice(i,0,{identifier:l,updater:f,references:1})}A.push(l)}return A}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var A=0;A<a.length;A++){var i=t(a[A]);e[i].references--}for(var c=o(n,r),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},460:(n,e,t)=>{n.exports=t.p+"e67ccd4a92677fdf8719.ttf"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!n;)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),A=t.n(a),i=t(565),c=t.n(i),s=t(216),d=t.n(s),l=t(589),p=t.n(l),u=t(402),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=A().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=d(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;var m=t(8),C={};C.styleTagTransform=p(),C.setAttributes=c(),C.insert=A().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=d(),e()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;var b=t(556),I={};function g(n){const e=document.createElement("div");return e.textContent=n,e}function h(n,e){const t=document.createElement("img");return t.src=n,t.alt=e,t}function B(n){const e=document.createElement("div");return e.id=n,e}function x(n){const e=document.createElement("div");return e.classList.add(n),e}function v(n,e,...t){const o=y(n),r=document.createElement("input");r.type=e,r.id=E(n),r.name=r.id,r.required=!0,"first"===[...t][0]&&(r.autofocus="on");const a=x("input");return a.append(o,r),a}function y(n){const e=document.createElement("label");return e.textContent=n,e.htmlFor=E(n),e}function k(n,e){const t=document.createElement("button");return t.append(n),t.id=e,t}function E(n){let e="";return e=n.split(" ").length>1?n.toLowerCase().split(" ").join("-"):n.toLowerCase(),e}I.styleTagTransform=p(),I.setAttributes=c(),I.insert=A().bind(null,"head"),I.domAPI=r(),I.insertStyleElement=d(),e()(b.Z,I),b.Z&&b.Z.locals&&b.Z.locals;const w=t.p+"32924a17e030bc9fbb9f.png",j=t.p+"faa12a6fbf61652859ec.png",S=t.p+"a7632e6a5f923dccde7e.png",T=t.p+"46855fcc55490d4f9ca3.png",q=(()=>{class n{constructor(n,e,t){this.name=n,this.src=e,this.alt=t}getId(){return this.name.toLowerCase().split(" ").join("-")}}function e(n){const e=h(n.src,n.alt),t=g(n.name),o=document.createElement("li");return o.append(e,t),o.id=n.getId(),o}return{init:function(){const t=function(){const n=h(w,"Todo Icon"),e=g("todo list"),t=B("brand");return t.append(n,e),t}(),o=function(){const n=h("",""),e=g(""),t=B("profile");return t.append(n,e),t}(),r=function(n){const t=document.createElement("ul");t.id="menu";for(const o of n){const n=e(o);t.append(n)}return t}([new n("Today",j,"Calendar Icon"),new n("Upcoming",S,"Calendar with Dots Icon"),new n("My Projects",T,"Multiple Book Icon")]),a=B("side-bar");return a.append(t,o,r),a}}})(),z=t.p+"13ebe65d027784fc9fb1.png",Y=t.p+"effbb9618e7f92263a7c.png",Z=(()=>{let n=null,e=null;const t=["Low","Medium","High"];function o(n){const e=x("project-title");e.textContent=n;const t=x("divider"),o=x("project");return o.append(e,t),o}function r(n){const e=document.createElement("input");e.type="checkbox",e.name="status",e.classList.add("status"),e.id=`s-${n.projectId}-${n.id}`,e.checked=n.status;const t=x("desc");t.textContent=n.description;const o=x("task-info");o.append(e,t);const r=x("days-left"),a=function(n){const e=n.split("-"),t=function(){const n=new Date,e=n.getDate(),t=n.getMonth()+1;return`${n.getFullYear()}-${t}-${e}`}().split("-"),o=new Date(e[0],e[1],e[2]),r=new Date(t[0],t[1],t[2]);return Math.round((o-r)/864e5)}(n.dueDate);r.textContent=function(n){if(n>=0)return n>1?`${n} days left`:`${n} day left`;{const e=Math.abs(n);return-1===n?`${e} day overdue`:`${e} days overdue`}}(a);const A=x("due-date");if(A.textContent="Due: "+n.dueDate,!1===n.status)a<0&&r.classList.add("overdue");else{r.classList.add("hidden"),A.classList.add("hidden"),t.classList.add("cross");const n=x("done");n.textContent="DONE",o.append(n)}const i=h(z,"Delete Icon"),c=k(i,`t-${n.projectId}-${n.id}`);c.classList.add("delete-task"),i.onmouseover=function(){i.src=Y},i.onmouseout=function(){i.src=z};const s=x("task-end");s.append(r,A,c);const d=x("task");return d.append(o,s),d.classList.add(function(n){return n.toLowerCase()}(n.priority)),d.id=`t-${n.id}`,d}function a(n){const e=k("+ Add Task",`p-${n}`);e.classList.add("add-task");const t=x("add-task-wrapper");return t.append(e),t}return{init:function(){n=x("title"),e=B("main-content");const o=function(){const n=v("Description","text","first"),e=v("Due Date","date"),o=function(n,e){const t=y(n),o=document.createElement("select");o.id=n.toLowerCase(),o.name=o.id,o.required=!0;for(const n of e)o.add(new Option(n,n.toLowerCase()),void 0);const r=x("select");return r.append(t,o),r}("Priority",t),r=k("Add","btn-task-add");r.type="submit";const a=document.createElement("form");a.method="dialog",a.id="form-add-task",a.append(n,e,o,r);const A=g("New Task"),i=k("X","btn-task-close"),c=x("close-wrapper");c.append(A,i);const s=document.createElement("dialog");return s.id="dialog-add-task",s.append(c,a),s}(),r=function(){const n=v("Title","text","first"),e=k("Add","btn-project-add");e.type="submit";const t=document.createElement("form");t.method="dialog",t.id="form-add-project",t.append(n,e);const o=g("New Project"),r=k("X","btn-project-close"),a=x("close-wrapper");a.append(o,r);const A=document.createElement("dialog");return A.id="dialog-add-project",A.append(a,t),A}(),a=B("main");return a.append(n,e,o,r),a},render:function(t,A){n.textContent=t,function(n){for(;n.children.length>0;)n.removeChild(n.lastChild)}(e);const i=function(n,e){switch(n){case"Today":case"Upcoming":return[g("</>")];case"My Projects":return function(n){let e=[];for(const t of n.projects){const n=o(t.title),A=x("project-task");if(0===t.tasks.length)A.append(g("No task found."));else for(const n of t.tasks)A.append(r(n));n.append(A,a(t.id)),e.push(n)}return e}(e)}}(t,A);for(const n of i)e.append(n);"My Projects"===t&&e.append(function(){const n=k("+ Add Project","add-project"),e=x("add-project-wrapper");return e.append(n),e}())}}})(),D=t.p+"c4eb6f5e9678529fae02.png",L=(()=>{let n=null;class e{constructor(n){this.name=n}icon={src:null,alt:null};projects=[]}class t{constructor(n,e){this.title=n,this.id=r(e)}tasks=[];notes;checklist}class o{constructor(n,e,t,o,a){this.description=n,this.dueDate=e,this.priority=t,this.id=r(o),this.projectId=a}status=!1}function r(n){if(0===n.length)return 1;let e=[];for(const t of n)e.push(t.id);return Math.max(...e)+1}function a(n,e){return n.findIndex((n=>n.id===e))}function A(n){return parseInt(n.split("-")[1])}function i(n){return parseInt(n.split("-")[2])}return{init:function(){return n=function(n){const o=new e("John");o.icon.src=D,o.icon.alt="Topguntocat";const r=new t("Default",o.projects);return o.projects.push(r),o}(),n},refresh:function(){return console.log(n),n},addTask:function(e,t,r,i){const c=A(i),s=a(n.projects,c),d=new o(e,t,r,n.projects[s].tasks,c);n.projects[s].tasks.push(d)},addProject:function(e){const o=new t(e,n.projects);n.projects.push(o)},deleteTask:function(e){const t=a(n.projects,A(e)),o=a(n.projects[t].tasks,i(e));n.projects[t].tasks.splice(o,1)},setTaskStatus:function(e,t){const o=a(n.projects,A(e)),r=a(n.projects[o].tasks,i(e));n.projects[o].tasks[r].status=t}}})();(()=>{const n=document.querySelector("#content");let e=null,t=null,o=null,r=null,a=null;function A(n){var e,o;e=n,o="active",null!==t&&t.classList.remove(o),e.classList.add(o),t=e,c()}function i(n,t){n.close(),t.reset(),e=L.refresh(),c()}function c(){Z.render(t.textContent,e),document.querySelectorAll(".add-task").forEach((n=>{n.onclick=function(){o.showModal(),a=n.id}})),function(){const n=document.querySelector("#add-project");null!==n&&(n.onclick=function(){r.showModal()})}(),document.querySelectorAll(".delete-task").forEach((n=>{n.onclick=function(){L.deleteTask(n.id),e=L.refresh(),c()}})),document.querySelectorAll(".status").forEach((n=>{n.onclick=function(){L.setTaskStatus(n.id,n.checked),e=L.refresh(),c()}}))}return{init:function(){document.title="Todo List",n.append(q.init(),Z.init()),function(){e=L.init();const n=document.querySelector("#profile"),t=n.querySelector("img"),o=n.querySelector("div");t.src=e.icon.src,t.alt=e.icon.alt,o.textContent=e.name}(),A(document.querySelector("#today")),document.querySelectorAll("#menu > li").forEach((n=>{n.onclick=function(){A(n)}}));const t=document.querySelector("#btn-task-close"),c=document.querySelector("#btn-project-close");o=document.querySelector("#dialog-add-task"),r=document.querySelector("#dialog-add-project");const s=document.querySelector("#form-add-task"),d=document.querySelector("#form-add-project");t.onclick=function(){o.close(),s.reset()},c.onclick=function(){r.close(),d.reset()};const l=document.querySelector("#btn-task-add"),p=document.querySelector("#description"),u=document.querySelector("#due-date"),f=document.querySelector("#priority");l.onclick=function(n){""!==p.value&&""!==u.value&&(n.preventDefault(),L.addTask(p.value,u.value,f.value,a),i(o,s))};const m=document.querySelector("#btn-project-add"),C=document.querySelector("#title");m.onclick=function(n){""!==C.value&&(n.preventDefault(),L.addProject(C.value),i(r,d))}}}})().init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,