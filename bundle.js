(()=>{"use strict";var n={556:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,":root {\n    --color-main: #f0f9ff;\n    --height-add-task: 32px;\n    --font-size-add-task: 18px;\n}\n\n#main {\n    box-sizing: border-box;\n    min-height: 100vh;\n    margin-left: var(--width-side-bar);\n    padding: 50px 100px;\n\n    background-color: var(--color-main);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n#title {\n    font-size: 24px;\n}\n\n.project {\n    background-color: var(--color-side-bar);\n    border-radius: 10px;\n    padding: 20px 40px;\n    font-size: 18px;\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.divider {\n    width: 100%;\n    border-bottom: 1px solid grey;\n}\n\n.project-task {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.task {\n    background-color: var(--color-main);\n    border-radius: 10px;\n    padding: 10px;\n}\n\n.add-task-wrapper {\n    height: var(--height-add-task);\n}\n\n.add-task {\n    height: var(--height-add-task);\n    background-color: transparent;\n    color: var(--color-brand);\n    border: none;\n    padding: 5px 10px;\n    font-size: var(--font-size-add-task);\n    font-style: italic;\n}\n\n.add-task:hover {\n    cursor: pointer;\n}\n\n.add-task:active {\n    font-size: calc(var(--font-size-add-task) - 1px);\n}\n","",{version:3,sources:["webpack://./src/css/main.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,uBAAuB;IACvB,0BAA0B;AAC9B;;AAEA;IACI,sBAAsB;IACtB,iBAAiB;IACjB,kCAAkC;IAClC,mBAAmB;;IAEnB,mCAAmC;;IAEnC,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,uCAAuC;IACvC,mBAAmB;IACnB,kBAAkB;IAClB,eAAe;;IAEf,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,mCAAmC;IACnC,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,8BAA8B;IAC9B,6BAA6B;IAC7B,yBAAyB;IACzB,YAAY;IACZ,iBAAiB;IACjB,oCAAoC;IACpC,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,gDAAgD;AACpD",sourcesContent:[":root {\n    --color-main: #f0f9ff;\n    --height-add-task: 32px;\n    --font-size-add-task: 18px;\n}\n\n#main {\n    box-sizing: border-box;\n    min-height: 100vh;\n    margin-left: var(--width-side-bar);\n    padding: 50px 100px;\n\n    background-color: var(--color-main);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n#title {\n    font-size: 24px;\n}\n\n.project {\n    background-color: var(--color-side-bar);\n    border-radius: 10px;\n    padding: 20px 40px;\n    font-size: 18px;\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.divider {\n    width: 100%;\n    border-bottom: 1px solid grey;\n}\n\n.project-task {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.task {\n    background-color: var(--color-main);\n    border-radius: 10px;\n    padding: 10px;\n}\n\n.add-task-wrapper {\n    height: var(--height-add-task);\n}\n\n.add-task {\n    height: var(--height-add-task);\n    background-color: transparent;\n    color: var(--color-brand);\n    border: none;\n    padding: 5px 10px;\n    font-size: var(--font-size-add-task);\n    font-style: italic;\n}\n\n.add-task:hover {\n    cursor: pointer;\n}\n\n.add-task:active {\n    font-size: calc(var(--font-size-add-task) - 1px);\n}\n"],sourceRoot:""}]);const s=i},8:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,":root {\n    --color-side-bar: #e0f2fe;\n    --color-brand: #0ea5e9;\n    --color-select: #bae6fd;\n    --width-side-bar: 20vw;\n}\n\n#side-bar {\n    box-sizing: border-box;\n    min-height: 100vh;\n    width: var(--width-side-bar);\n    padding: 20px;\n\n    background-color: var(--color-side-bar);\n    box-shadow: 0 0 10px grey;\n    z-index: 1;\n    \n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n\n    position: fixed;\n    top: 0;\n}\n\n#brand > img {\n    height: 48px;\n}\n\n#brand {\n    color: var(--color-brand);\n    font-size: 18px;\n    font-weight: bold;\n\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile {\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile > img {\n    background-color: white;\n    height: 48px;\n    border-radius: 24px;\n}\n\n#menu {\n    display: grid;\n    gap: 10px;\n}\n\n#menu > li {\n    height: 2rem;\n    border-radius: 10px;\n    padding-left: 1rem;\n\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n#menu > li > img {\n    height: 24px;\n}\n\n#menu > li:hover,\n#menu > li.active {\n    cursor: pointer;\n    background-color: var(--color-select);\n    color: var(--color-brand);\n    font-weight: bold;\n}\n\n#menu > li.active {\n    font-style: italic;\n}\n","",{version:3,sources:["webpack://./src/css/side-bar.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,sBAAsB;IACtB,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,sBAAsB;IACtB,iBAAiB;IACjB,4BAA4B;IAC5B,aAAa;;IAEb,uCAAuC;IACvC,yBAAyB;IACzB,UAAU;;IAEV,aAAa;IACb,sBAAsB;IACtB,SAAS;;IAET,eAAe;IACf,MAAM;AACV;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,eAAe;IACf,iBAAiB;;IAEjB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,uBAAuB;IACvB,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,mBAAmB;IACnB,kBAAkB;;IAElB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,YAAY;AAChB;;AAEA;;IAEI,eAAe;IACf,qCAAqC;IACrC,yBAAyB;IACzB,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:[":root {\n    --color-side-bar: #e0f2fe;\n    --color-brand: #0ea5e9;\n    --color-select: #bae6fd;\n    --width-side-bar: 20vw;\n}\n\n#side-bar {\n    box-sizing: border-box;\n    min-height: 100vh;\n    width: var(--width-side-bar);\n    padding: 20px;\n\n    background-color: var(--color-side-bar);\n    box-shadow: 0 0 10px grey;\n    z-index: 1;\n    \n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n\n    position: fixed;\n    top: 0;\n}\n\n#brand > img {\n    height: 48px;\n}\n\n#brand {\n    color: var(--color-brand);\n    font-size: 18px;\n    font-weight: bold;\n\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile {\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#profile > img {\n    background-color: white;\n    height: 48px;\n    border-radius: 24px;\n}\n\n#menu {\n    display: grid;\n    gap: 10px;\n}\n\n#menu > li {\n    height: 2rem;\n    border-radius: 10px;\n    padding-left: 1rem;\n\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n#menu > li > img {\n    height: 24px;\n}\n\n#menu > li:hover,\n#menu > li.active {\n    cursor: pointer;\n    background-color: var(--color-select);\n    color: var(--color-brand);\n    font-weight: bold;\n}\n\n#menu > li.active {\n    font-style: italic;\n}\n"],sourceRoot:""}]);const s=i},402:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),s=t(667),c=t.n(s),A=new URL(t(460),t.b),d=i()(r()),l=c()(A);d.push([n.id,`@font-face {\n    font-family: 'Varela Round';\n    src: url(${l});\n}\n\n:root {\n    --font-content: 'Varela Round';\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\nli {\n    list-style: none;\n}\n\n#content {\n    font-family: var(--font-content);\n}\n`,"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B,4CAAyC;AAC7C;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,gCAAgC;AACpC",sourcesContent:["@font-face {\n    font-family: 'Varela Round';\n    src: url(../font/VarelaRound-Regular.ttf);\n}\n\n:root {\n    --font-content: 'Varela Round';\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\nli {\n    list-style: none;\n}\n\n#content {\n    font-family: var(--font-content);\n}\n"],sourceRoot:""}]);const p=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],A=o.base?c[0]+o.base:c[0],d=a[A]||0,l="".concat(A," ").concat(d);a[A]=d+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=s,e.splice(s,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=o(n,r),A=0;A<a.length;A++){var d=t(a[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},460:(n,e,t)=>{n.exports=t.p+"e67ccd4a92677fdf8719.ttf"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!n;)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),s=t(565),c=t.n(s),A=t(216),d=t.n(A),l=t(589),p=t.n(l),u=t(402),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=d(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;var m=t(8),g={};g.styleTagTransform=p(),g.setAttributes=c(),g.insert=i().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=d(),e()(m.Z,g),m.Z&&m.Z.locals&&m.Z.locals;var C=t(556),h={};function b(n){const e=document.createElement("div");return e.textContent=n,e}function B(n,e){const t=document.createElement("img");return t.src=n,t.alt=e,t}function I(n){const e=document.createElement("div");return e.id=n,e}function v(n){const e=document.createElement("div");return e.classList.add(n),e}h.styleTagTransform=p(),h.setAttributes=c(),h.insert=i().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=d(),e()(C.Z,h),C.Z&&C.Z.locals&&C.Z.locals;class x{constructor(n,e){this.title=n,this.id=e}tasks=[];addTask(n){this.tasks.push(n)}notes;checklist}class y{constructor(n,e,t,o){this.description=n,this.dueDate=e,this.priority=t,this.id=o}status=!1}function k(n){if(0===n.length)return 1;let e=[];for(const t of n)e.push(t.id);return Math.max(...e)+1}const E=t.p+"32924a17e030bc9fbb9f.png",w=t.p+"faa12a6fbf61652859ec.png",S=t.p+"a7632e6a5f923dccde7e.png",j=t.p+"46855fcc55490d4f9ca3.png",z=(()=>{class n{constructor(n,e,t){this.name=n,this.src=e,this.alt=t}getId(){return this.name.toLowerCase().split(" ").join("-")}}function e(n){const e=B(n.src,n.alt),t=b(n.name),o=document.createElement("li");return o.append(e,t),o.id=n.getId(),o}return{init:function(){const t=function(){const n=B(E,"Todo Icon"),e=b("todo list"),t=I("brand");return t.append(n,e),t}(),o=function(){const n=B("",""),e=b(""),t=I("profile");return t.append(n,e),t}(),r=function(n){const t=document.createElement("ul");t.id="menu";for(const o of n){const n=e(o);t.append(n)}return t}([new n("Today",w,"Calendar Icon"),new n("Upcoming",S,"Calendar with Dots Icon"),new n("My Projects",j,"Multiple Book Icon")]),a=I("side-bar");return a.append(t,o,r),a}}})(),T=(()=>{let n=null,e=null;function t(n){const e=v("project-title");e.textContent=n;const t=v("divider"),o=v("project");return o.append(e,t),o}function o(n){const e=v("desc");e.textContent=n.description;const t=v("task");return t.append(e),t}function r(n){const e=document.createElement("button");e.textContent="+ Add Task",e.classList.add("add-task"),e.id=`p-${n}`;const t=v("add-task-wrapper");return t.append(e),t}return Object.prototype.clear=function(){for(;this.children.length>0;)this.removeChild(this.lastChild)},{init:function(){n=I("title");const t=I("main-content");e=I("display"),t.append(e);const o=I("main");return o.append(n,t),o},render:function(a,i){n.textContent=a,e.clear();const s=function(n,e){switch(n){case"Today":case"Upcoming":return[b("</>")];case"My Projects":return function(n){let e=[];for(const a of n.projects){const n=t(a.title),i=v("project-task");if(0===a.tasks.length)i.append(b("No task found."));else for(const n of a.tasks)i.append(o(n));n.append(i,r(a.id)),e.push(n)}return e}(e)}}(a,i);for(const n of s)e.append(n)}}})(),R=t.p+"c4eb6f5e9678529fae02.png",Z=(()=>{class n{constructor(n){this.name=n}icon={src:null,alt:null};projects=[];addProject(n){this.projects.push(n)}}return{init:function(){return function(e){const t=new n("John");t.icon.src=R,t.icon.alt="Topguntocat";const o=new x("Default",k(t.projects));return t.addProject(o),t}()}}})();(()=>{const n=document.querySelector("#content");let e=null,t=null,o=null,r=null;function a(){r=document.querySelectorAll(".add-task"),r.forEach((n=>{n.onclick=function(){const t=e.projects.findIndex((e=>e.id===parseInt(n.id.split("-")[1]))),r=new y("Code","28/11/2023","High",k(e.projects));e.projects[t].addTask(r),T.render(o.textContent,e),a()}}))}return Object.prototype.toggleAndRender=function(){this.toggleClass("active"),T.render(o.textContent,e),a()},Object.prototype.toggleClass=function(n){null!==o&&o.classList.remove(n),this.classList.add(n),o=this},{init:function(){document.title="Todo List",n.append(z.init(),T.init()),function(){e=Z.init();const n=document.querySelector("#profile"),t=n.querySelector("img"),o=n.querySelector("div");t.src=e.icon.src,t.alt=e.icon.alt,o.textContent=e.name}(),document.querySelector("#today").toggleAndRender(),t=document.querySelectorAll("#menu > li"),t.forEach((n=>{n.onclick=function(n){n.target.toggleAndRender()}}))}}})().init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,